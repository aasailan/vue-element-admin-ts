{"version":3,"sources":["webpack:///asset/js/2.21ea556f167422be7daf.js","webpack:///./src/pages/test/index.vue","webpack:///./src/assets/images/weixiaobao.png","webpack:///./src/assets/images/avatar.png","webpack:///./src/assets/images/timg.jpg","webpack:///./src/pages/test/index.ts","webpack:///./src/vendors/clipper/clipper.js","webpack:///./node_modules/cropperjs/dist/cropper.js","webpack:///./src/assets/images/loading.gif","webpack:///./src/pages/test/index.vue?7bb3"],"names":["webpackJsonp","564","module","__webpack_exports__","__webpack_require__","injectStyle","ssrContext","disposed","Object","defineProperty","value","__WEBPACK_IMPORTED_MODULE_0__awesome_typescript_loader_tslint_loader_index_ts__","__WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a029b292_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_bustCache_index_vue__","normalizeComponent","__vue_styles__","Component","options","__file","esModule","keys","some","key","substr","584","exports","p","599","600","772","773","__WEBPACK_IMPORTED_MODULE_0_vue__","__WEBPACK_IMPORTED_MODULE_1_vue_class_component__","__WEBPACK_IMPORTED_MODULE_1_vue_class_component___default","n","__WEBPACK_IMPORTED_MODULE_2_vuex_class__","__WEBPACK_IMPORTED_MODULE_3_muse_ui_popup__","__WEBPACK_IMPORTED_MODULE_4__config__","__WEBPACK_IMPORTED_MODULE_5__router__","__WEBPACK_IMPORTED_MODULE_6_vue_smooth_picker_dist_css_style_css__","__WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker__","__WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker___default","__WEBPACK_IMPORTED_MODULE_8__entity_toast__","__WEBPACK_IMPORTED_MODULE_9__vendors_clipper_clipper_js__","__WEBPACK_IMPORTED_MODULE_10__vendors_clipper_style_css__","__WEBPACK_IMPORTED_MODULE_11_core_image_xhr__","__WEBPACK_IMPORTED_MODULE_11_core_image_xhr___default","__WEBPACK_IMPORTED_MODULE_12__components_croppa_index_vue__","__extends","this","extendStatics","setPrototypeOf","__proto__","Array","d","b","hasOwnProperty","__","constructor","prototype","create","__decorate","decorators","target","desc","c","arguments","length","r","getOwnPropertyDescriptor","Reflect","decorate","i","__metadata","k","v","metadata","use","a","count","img1","img2","img3","TestComp","_super","_this","apply","pickerData","currentIndex","flex","list","onClick","clickOnPlan","textAlign","className","divider","text","clickOnProduct","myCroppaOption","compressionRate","quality","isShowCropper","imgs","src","w","h","clickob","obtest","next","change","ciList","$refs","getCurrentIndexList","openModal","addModal","closeModel","history","back","openModal2","closeMode2","enterCommentView","push","name","params","action","id","userInfo","uid","activated","deactivated","uploadPhoto","event","image","document","getElementById","resultObj","headers","access-token","state","token","hintTxt","aspectRatio","NaN","disableOrientation","uploadServer","filed","uploadSuccess","res","showToast","uploadError","msgText","changeImg","changeFile","getObjectURL","file","url","undefined","window","URL","createObjectURL","cancelCrop","confirmCrop","data","base64Code","type","filename","cropper","showLoading","hideLoading","hide","err","chooseFile","fullScreen","fromCamera","choosePhoto","myCroppaConfirm","croppa","msgStatus","alert","obj","cancel","showImg","index","open","user","modal","MODAL_0","MODAL_1","components","mu-popup","my-croppa","774","__WEBPACK_IMPORTED_MODULE_0_cropperjs__","__WEBPACK_IMPORTED_MODULE_0_cropperjs___default","__WEBPACK_IMPORTED_MODULE_1_core_image_xhr__","__WEBPACK_IMPORTED_MODULE_1_core_image_xhr___default","__WEBPACK_IMPORTED_MODULE_2_exif_js__","__WEBPACK_IMPORTED_MODULE_2_exif_js___default","uploadImg","paramsData","install","Vue","initilize","opt","self","createElement","preview","autoCropArea","viewMode","guides","cropBoxResizable","cropBoxMovable","dragCrop","background","checkOrientation","checkCrossOrigin","zoomable","zoomOnWheel","center","toggleDragModeOnDblclick","ready","Orientation","rotate","cropBox","querySelector","style","outline","disable","str","body","getElementsByTagName","reagion","innerHTML","appendChild","initFunction","clickBtn","cancelBtn","addEvent","crop","destoried","fileObj","clip","e","srcElement","files","dataTransfer","getData","getTag","picValue","originUrl","setAspectRatio","replace","webkitURL","Image","croppedCanvas","roundedCanvas","display","setTimeout","getCroppedCanvas","getRoundedCanvas","imgData","toDataURL","postImg","onload","compress","sourceCanvas","canvas","context","getContext","width","height","imageSmoothingEnabled","drawImage","globalCompositeOperation","beginPath","rect","fill","removeEvent","parentNode","removeChild","destroy","imageData","arr","split","fileType","loading","success","rotateImg","img","direction","step","degree","Math","PI","ctx","tCanvas","tctx","ratio","sqrt","fillStyle","fillRect","nw","nh","j","ndata","fn","addEventListener","attachEvent","removeEventListener","detachEvent","775","global","factory","isNumber","isNaN","isUndefined","isObject","_typeof","isPlainObject","_constructor","call","isFunction","each","callback","isArray","forEach","extend","_len","args","_key","assign","concat","arg","proxy","_len2","_key2","_len3","args2","_key3","normalizeDecimalNumber","times","REGEXP_DECIMALS","test","round","setStyle","element","styles","property","REGEXP_SUFFIX","hasClass","classList","contains","indexOf","addClass","elem","add","trim","removeClass","remove","toggleClass","added","hyphenate","REGEXP_HYPHENATE","toLowerCase","dataset","getAttribute","setData","setAttribute","removeData","removeAttribute","removeListener","listener","types","REGEXP_SPACES","t","addListener","_listener","once","originalListener","_len4","_key4","dispatchEvent","Event","CustomEvent","bubbles","cancelable","detail","createEvent","initEvent","initCustomEvent","fireEvent","getOffset","doc","documentElement","box","getBoundingClientRect","left","scrollX","scrollLeft","clientLeft","top","scrollY","scrollTop","clientTop","empty","firstChild","isCrossOriginURL","parts","match","REGEXP_ORIGINS","location","protocol","hostname","port","addTimestamp","timestamp","Date","getTime","getTransforms","_ref","scaleX","scaleY","translateX","translateY","values","transform","join","WebkitTransform","msTransform","getImageNaturalSizes","naturalWidth","IS_SAFARI_OR_UIWEBVIEW","naturalHeight","newImage","cssText","getMaxZoomRatio","pointers","pointers2","ratios","pointer","pointerId","pointer2","x1","abs","startX","y1","startY","x2","endX","y2","endY","z1","z2","sort","getPointer","_ref2","endOnly","pageX","pageY","end","getPointersCenter","_ref3","getContainSizes","_ref4","isValidNumber","isFinite","getRotatedSizes","_ref5","arc","sinArc","sin","cosArc","cos","newWidth","newHeight","getSourceCanvas","_ref6","_ref7","_ref8","imageNaturalWidth","imageNaturalHeight","_ref6$rotate","_ref6$scaleX","_ref6$scaleY","_ref8$fillColor","fillColor","_ref8$imageSmoothingE","_ref8$imageSmoothingQ","imageSmoothingQuality","_ref8$maxWidth","maxWidth","Infinity","_ref8$maxHeight","maxHeight","_ref8$minWidth","minWidth","_ref8$minHeight","minHeight","maxSizes","minSizes","min","max","save","translate","scale","toConsumableArray","map","param","floor","restore","getStringFromCharCode","dataView","start","fromCharCode","getUint8","dataURLToArrayBuffer","dataURL","base64","REGEXP_DATA_URL_HEAD","binary","atob","arrayBuffer","ArrayBuffer","uint8","Uint8Array","charCodeAt","arrayBufferToDataURL","mimeType","btoa","getOrientation","DataView","orientation","littleEndian","app1Start","ifdStart","byteLength","offset","exifIDCode","tiffOffset","endianness","getUint16","firstIFDOffset","getUint32","_length","_offset","setUint16","parseOrientation","WINDOW","CLASS_HIDDEN","NAMESPACE","EVENT_POINTER_DOWN","PointerEvent","EVENT_POINTER_MOVE","EVENT_POINTER_UP","REGEXP_ACTIONS","REGEXP_DATA_URL","REGEXP_DATA_URL_JPEG","REGEXP_TAG_NAME","DEFAULTS","dragMode","responsive","highlight","autoCrop","movable","rotatable","scalable","zoomOnTouch","wheelZoomRatio","minCanvasWidth","minCanvasHeight","minCropBoxWidth","minCropBoxHeight","minContainerWidth","minContainerHeight","cropstart","cropmove","cropend","zoom","Symbol","iterator","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","props","descriptor","enumerable","configurable","writable","protoProps","staticProps","arr2","from","Number","navigator","userAgent","String","render","initContainer","initCanvas","initCropBox","renderCanvas","cropped","renderCropBox","container","containerData","offsetWidth","offsetHeight","rotated","canvasWidth","canvasHeight","canvasData","oldLeft","oldTop","limited","limitCanvas","initialImageData","initialCanvasData","sizeLimited","positionLimited","cropBoxData","_getContainSizes","newCanvasLeft","newCanvasTop","minLeft","minTop","maxLeft","maxTop","changed","transformed","_getRotatedSizes","renderImage","limitCropBox","output","initialCropBoxData","maxCropBoxWidth","maxCropBoxHeight","face","disabled","complete","initPreview","crossOrigin","crossOriginUrl","viewBox","image2","previews","querySelectorAll","html","resetPreview","cropBoxWidth","cropBoxHeight","originalWidth","originalHeight","events","bind","onCropStart","cropStart","onWheel","wheel","onDblclick","dblclick","ownerDocument","onCropMove","cropMove","onCropEnd","cropEnd","onResize","resize","unbind","handlers","getCanvasData","getCropBoxData","setCanvasData","setCropBoxData","setDragMode","dragBox","delta","preventDefault","wheeling","deltaY","wheelDelta","changedTouches","touch","identifier","originalEvent","cropping","right","bottom","renderable","shiftKey","range","x","y","check","side","move","methods","reset","clear","onlyColorChanged","isImg","replaced","load","enable","loaded","originalUrl","unbuild","onStart","offsetX","offsetY","_canvasData","moveTo","_originalEvent","zoomTo","pivot","oldRatio","rotateTo","_scaleX","_scaleY","rounded","getContainerData","getImageData","widthChanged","heightChanged","HTMLCanvasElement","source","_getData","initialWidth","initialHeight","_options$imageSmoothi","sourceWidth","sourceHeight","srcX","srcY","srcWidth","srcHeight","dstX","dstY","dstWidth","dstHeight","mode","croppable","AnotherCropper","Cropper","tagName","Error","init","clone","read","xhr","XMLHttpRequest","onerror","response","responseType","withCredentials","send","_parseOrientation","stop","onStop","insertBefore","nextSibling","_this2","build","_this3","template","getElementsByClassName","completing","clearTimeout","776","777","778","_vm","_h","$createElement","_c","_self","staticClass","attrs","title","slot","_v","afterText","on","click","accept","$event","_m","position","isShowModal2","close","ref","option","confirm","popupClass","isShowModal","_e","staticRenderFns","staticStyle","overflow","_withStripped","esExports"],"mappings":"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","file":"asset/js/2.21ea556f167422be7daf.js","sourcesContent":["webpackJsonp([2],{\n\n/***/ 564:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__awesome_typescript_loader_tslint_loader_index_ts__ = __webpack_require__(773);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a029b292_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_bustCache_index_vue__ = __webpack_require__(778);\nvar disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  __webpack_require__(772)\n}\nvar normalizeComponent = __webpack_require__(6)\n/* script */\n/* template */\n\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __WEBPACK_IMPORTED_MODULE_0__awesome_typescript_loader_tslint_loader_index_ts__[\"a\" /* default */],\n  __WEBPACK_IMPORTED_MODULE_1__node_modules_vue_loader_lib_template_compiler_index_id_data_v_a029b292_hasScoped_false_buble_transforms_node_modules_vue_loader_lib_selector_type_template_index_0_bustCache_index_vue__[\"a\" /* default */],\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\pages\\\\test\\\\index.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {  console.error(\"named exports are not supported in *.vue files.\")}\n\n/* hot reload */\nif (false) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-a029b292\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-a029b292\", Component.options)\n' + '  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\n/* harmony default export */ __webpack_exports__[\"default\"] = (Component.exports);\n\n\n/***/ }),\n\n/***/ 584:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"/asset/imgs/weixiaobao4b8e1e830f46d01a7e6b0c07fbfa5b4e.png\";\n\n/***/ }),\n\n/***/ 599:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"/asset/imgs/avatare274a23e362234e96f8fa2898b0d944c.png\";\n\n/***/ }),\n\n/***/ 600:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"/asset/imgs/timgf03ae5d3eaf33c8b5bffa4c570c41831.jpg\";\n\n/***/ }),\n\n/***/ 772:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 773:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_vue__ = __webpack_require__(12);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_class_component__ = __webpack_require__(55);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_vue_class_component___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_vue_class_component__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_vuex_class__ = __webpack_require__(110);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_muse_ui_popup__ = __webpack_require__(582);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(25);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__router__ = __webpack_require__(78);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_smooth_picker_dist_css_style_css__ = __webpack_require__(595);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6_vue_smooth_picker_dist_css_style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6_vue_smooth_picker_dist_css_style_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker__ = __webpack_require__(596);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__entity_toast__ = __webpack_require__(60);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__vendors_clipper_clipper_js__ = __webpack_require__(774);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__vendors_clipper_style_css__ = __webpack_require__(777);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__vendors_clipper_style_css___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_10__vendors_clipper_style_css__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_core_image_xhr__ = __webpack_require__(576);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11_core_image_xhr___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_11_core_image_xhr__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__components_croppa_index_vue__ = __webpack_require__(578);\n/*\r\n * @Author: qiao\r\n * @Date: 2017-12-25 20:03:53\r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2018-01-31 14:27:15\r\n * @description:  测试页面\r\n */\r\nvar __extends = (this && this.__extends) || (function () {\r\n    var extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return function (d, b) {\r\n        extendStatics(d, b);\r\n        function __() { this.constructor = d; }\r\n        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n    };\r\n})();\r\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n};\r\nvar __metadata = (this && this.__metadata) || function (k, v) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(k, v);\r\n};\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n// import '~/vendors/photoView/image-collector.js';\r\n// import '~/assets/css/image-collector.less';\r\n // 引入裁剪插件\r\n\r\n/* 图片压缩上传 */\r\n\r\n// import '~/vendors/photoView/image-collector.js';\r\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_7_vue_smooth_picker___default.a);\r\n__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"].use(__WEBPACK_IMPORTED_MODULE_9__vendors_clipper_clipper_js__[\"a\" /* default */]);\r\nvar count = 0;\r\n// 裁剪压缩上传\r\n\r\n// 图片预览\r\n// import VuePreview from 'vue-preview';\r\n// Vue.use(VuePreview);\r\n// // # 引入\r\n// import preview from 'vue-photo-preview';\r\n// import 'vue-photo-preview/dist/skin.css';\r\n// Vue.use(preview);\r\nvar img1 = __webpack_require__(599);\r\nvar img2 = __webpack_require__(584);\r\nvar img3 = __webpack_require__(600);\r\nvar TestComp = /** @class */ (function (_super) {\r\n    __extends(TestComp, _super);\r\n    function TestComp() {\r\n        var _this = _super !== null && _super.apply(this, arguments) || this;\r\n        _this.a = false;\r\n        // picker控件数据\r\n        _this.pickerData = [\r\n            {\r\n                currentIndex: 0,\r\n                flex: 3,\r\n                list: [\r\n                    'Plan A - free', 'Plan B - $50', 'Plan C - $100'\r\n                ],\r\n                onClick: _this.clickOnPlan,\r\n                textAlign: 'center',\r\n                className: 'row-group'\r\n            },\r\n            {\r\n                divider: true,\r\n                flex: 1,\r\n                text: 'product',\r\n                textAlign: 'center',\r\n                className: 'divider'\r\n            },\r\n            {\r\n                currentIndex: 2,\r\n                flex: 3,\r\n                list: [\r\n                    '1 * A item', '2 * A items', '3 * A items', '4 * A items', '5 * A items'\r\n                ],\r\n                onClick: _this.clickOnProduct,\r\n                textAlign: 'center',\r\n                className: 'item-group'\r\n            }\r\n        ];\r\n        _this.myCroppaOption = {\r\n            compressionRate: 0.8,\r\n            quality: 2\r\n            // fromCamera: true\r\n        };\r\n        _this.isShowCropper = false;\r\n        _this.imgs = [\r\n            {\r\n                src: img1,\r\n                w: 414,\r\n                h: 736\r\n            },\r\n            {\r\n                src: img2,\r\n                w: 414,\r\n                h: 736\r\n            },\r\n            {\r\n                src: img3,\r\n                w: 414,\r\n                h: 736\r\n            }\r\n        ];\r\n        return _this;\r\n    }\r\n    TestComp.prototype.clickob = function () {\r\n        console.log('test');\r\n        // this['$observables'].obtest.subscribe(msg => {\r\n        //     console.log(msg);\r\n        // });\r\n        count++;\r\n        this['$observables'].obtest.next(count);\r\n    };\r\n    TestComp.prototype.change = function () {\r\n        // console.log('change');\r\n        var ciList = this.$refs['smoothPicker'].getCurrentIndexList();\r\n        var planDetail = this.pickerData[0].list[ciList[0]];\r\n        var productDetail = this.pickerData[2].list[ciList[2]];\r\n        console.log(planDetail);\r\n        console.log(productDetail);\r\n        // if (productDetail === ) {\r\n        // }\r\n    };\r\n    TestComp.prototype.clickOnPlan = function () {\r\n        console.log('点击了clickOnPlan');\r\n    };\r\n    TestComp.prototype.clickOnProduct = function () {\r\n        console.log('点击了clickOnProduct');\r\n    };\r\n    TestComp.prototype.openModal = function () {\r\n        this.addModal(__WEBPACK_IMPORTED_MODULE_4__config__[\"D\" /* MODAL_0 */]);\r\n    };\r\n    TestComp.prototype.closeModel = function () {\r\n        history.back();\r\n    };\r\n    TestComp.prototype.openModal2 = function () {\r\n        this.addModal(__WEBPACK_IMPORTED_MODULE_4__config__[\"E\" /* MODAL_1 */]);\r\n    };\r\n    TestComp.prototype.closeMode2 = function () {\r\n        history.back();\r\n    };\r\n    TestComp.prototype.enterCommentView = function () {\r\n        __WEBPACK_IMPORTED_MODULE_5__router__[\"a\" /* default */].push({\r\n            name: 'commentView',\r\n            params: {\r\n                action: 'mySelf',\r\n                id: this.userInfo.uid\r\n            }\r\n        });\r\n    };\r\n    TestComp.prototype.activated = function () {\r\n        this.a = true;\r\n    };\r\n    TestComp.prototype.deactivated = function () {\r\n        this.a = false;\r\n    };\r\n    TestComp.prototype.uploadPhoto = function (event) {\r\n        var image = document.getElementById('auth-img'); // 设置image\r\n        this['clip'](event, {\r\n            resultObj: image,\r\n            headers: {\r\n                'access-token': this['$store'].state.token\r\n            },\r\n            hintTxt: '图片识别中',\r\n            aspectRatio: NaN,\r\n            disableOrientation: true,\r\n            // aspectRatio : 'Free', // 裁剪比例\r\n            uploadServer: 'http://172.18.10.242:8080',\r\n            filed: 'idcard',\r\n            uploadSuccess: function (res) {\r\n                console.log('uploadSuccess');\r\n                console.log(res);\r\n                this.showToast(new __WEBPACK_IMPORTED_MODULE_8__entity_toast__[\"a\" /* ToastMsg */]('识别身份证成功'));\r\n            },\r\n            uploadError: function (res) {\r\n                console.log('uploadError');\r\n                this.showToast(new __WEBPACK_IMPORTED_MODULE_8__entity_toast__[\"a\" /* ToastMsg */](res.msgText));\r\n            }\r\n        });\r\n    };\r\n    TestComp.prototype.changeImg = function (event) {\r\n        this.$refs['cropper'].changeFile(event);\r\n    };\r\n    /**\r\n     * 获取文件对象的url\r\n     */\r\n    TestComp.prototype.getObjectURL = function (file) {\r\n        var url = null;\r\n        if (window['createObjectURL'] !== undefined) {\r\n            url = window['createObjectURL'](file);\r\n        }\r\n        else if (window.URL !== undefined) {\r\n            url = window.URL.createObjectURL(file);\r\n        }\r\n        else if (window['webkitURL'] !== undefined) {\r\n            url = window['webkitURL'].createObjectURL(file);\r\n        }\r\n        return url;\r\n    };\r\n    TestComp.prototype.cancelCrop = function () {\r\n        this.isShowCropper = false;\r\n        console.log('取消');\r\n    };\r\n    TestComp.prototype.confirmCrop = function (data) {\r\n        var _this = this;\r\n        console.log('确认');\r\n        var url = __WEBPACK_IMPORTED_MODULE_4__config__[\"V\" /* UPLOAD_AVATAR_URL */];\r\n        var headers = {\r\n            'access-token': this['$store'].state.token\r\n        };\r\n        var params = {\r\n            base64Code: data.base64Code,\r\n            type: data.type,\r\n            filename: data.filename,\r\n            filed: 'file'\r\n        };\r\n        var cropper = this.$refs['cropper'];\r\n        this.showLoading();\r\n        __WEBPACK_IMPORTED_MODULE_11_core_image_xhr___default()('POST', url, headers, params, function (res) {\r\n            console.log('上传成功');\r\n            console.log(res);\r\n            _this.hideLoading();\r\n            cropper.hide();\r\n        }, function (err) {\r\n            console.log('上传失败');\r\n            console.log(err);\r\n            _this.hideLoading();\r\n            cropper.hide();\r\n        }, true, true);\r\n    };\r\n    /* 选择文件 */\r\n    TestComp.prototype.chooseFile = function () {\r\n        this.myCroppaOption = {\r\n            compressionRate: 0.8,\r\n            quality: 2,\r\n            fullScreen: false,\r\n            fromCamera: false\r\n        };\r\n        this.$refs['croppa'].chooseFile();\r\n    };\r\n    TestComp.prototype.choosePhoto = function () {\r\n        this.myCroppaOption = {\r\n            compressionRate: 0.5,\r\n            quality: 6,\r\n            fullScreen: true,\r\n            fromCamera: false\r\n        };\r\n        this.$refs['croppa'].chooseFile();\r\n    };\r\n    TestComp.prototype.myCroppaConfirm = function (data) {\r\n        var _this = this;\r\n        // debugger;\r\n        var url = __WEBPACK_IMPORTED_MODULE_4__config__[\"X\" /* UPLOAD_ID_CARD */];\r\n        var headers = {\r\n            'access-token': this['$store'].state.token\r\n        };\r\n        var params = {\r\n            base64Code: data.base64Code,\r\n            type: data.type,\r\n            filename: data.filename,\r\n            filed: 'idcard'\r\n        };\r\n        var croppa = this.$refs['croppa'];\r\n        this.showLoading();\r\n        __WEBPACK_IMPORTED_MODULE_11_core_image_xhr___default()('POST', url, headers, params, function (res) {\r\n            console.log('上传成功');\r\n            console.log(res);\r\n            if (res.msgStatus === 0) {\r\n                alert(res.obj.name);\r\n                _this.showToast(new __WEBPACK_IMPORTED_MODULE_8__entity_toast__[\"a\" /* ToastMsg */]('上传成功'));\r\n            }\r\n            else {\r\n                _this.showToast(new __WEBPACK_IMPORTED_MODULE_8__entity_toast__[\"a\" /* ToastMsg */](res.msgText));\r\n            }\r\n            _this.hideLoading();\r\n            croppa.cancel();\r\n        }, function (err) {\r\n            console.log('上传失败');\r\n            console.log(err);\r\n            _this.hideLoading();\r\n            _this.showToast(new __WEBPACK_IMPORTED_MODULE_8__entity_toast__[\"a\" /* ToastMsg */]('上传失败'));\r\n            croppa.cancel();\r\n        }, true, true);\r\n    };\r\n    /* 图片预览 */\r\n    TestComp.prototype.showImg = function (index) {\r\n        this['$preview'].open(index, this.imgs);\r\n    };\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"c\" /* State */])(function (state) { return state.user.user; }),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"userInfo\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"c\" /* State */])(function (state) { return state.modal.MODAL_0; }),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"isShowModal\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"c\" /* State */])(function (state) { return state.modal.MODAL_1; }),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"isShowModal2\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"a\" /* Action */])('addModal'),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"addModal\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"a\" /* Action */])('showLoading'),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"showLoading\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"a\" /* Action */])('hideLoading'),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"hideLoading\", void 0);\r\n    __decorate([\r\n        Object(__WEBPACK_IMPORTED_MODULE_2_vuex_class__[\"a\" /* Action */])('showToast'),\r\n        __metadata(\"design:type\", Object)\r\n    ], TestComp.prototype, \"showToast\", void 0);\r\n    TestComp = __decorate([\r\n        __WEBPACK_IMPORTED_MODULE_1_vue_class_component___default()({\r\n            components: {\r\n                'mu-popup': __WEBPACK_IMPORTED_MODULE_3_muse_ui_popup__[\"a\" /* default */],\r\n                'my-croppa': __WEBPACK_IMPORTED_MODULE_12__components_croppa_index_vue__[\"a\" /* default */]\r\n            }\r\n        })\r\n    ], TestComp);\r\n    return TestComp;\r\n}(__WEBPACK_IMPORTED_MODULE_0_vue__[\"default\"]));\r\n/* harmony default export */ __webpack_exports__[\"a\"] = (TestComp);\r\n\n\n/***/ }),\n\n/***/ 774:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cropperjs__ = __webpack_require__(775);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_cropperjs___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_cropperjs__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_image_xhr__ = __webpack_require__(576);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_core_image_xhr___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_core_image_xhr__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_exif_js__ = __webpack_require__(594);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_exif_js___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_exif_js__);\n/* eslint-disable */\n\n/**\n *\tname : vue 的图片裁减压缩处理\n *   author : 陈威\n *   date : 2017/6/20\n *   dependence :\n *       cropper 第三方的一个裁剪库\n *       exif    获取图片源信息，解决ios图片旋转的问题\n * */\n\n\n\n\nvar uploadImg = __webpack_require__(776);\n\nvar paramsData = void 0;\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n\tinstall: function install(Vue) {\n\t\t//初始化方法\n\t\tVue.prototype.initilize = function (opt) {\n\t\t\t// debugger;\n\t\t\tvar self = this;\n\n\t\t\t// 设置默认提示文本\n\t\t\t!opt.hintTxt ? opt.hintTxt = '正在上传...' : null;\n\n\t\t\tthis.options = opt;\n\n\t\t\t//创建dom\n\t\t\tthis.createElement();\n\t\t\tthis.resultObj = opt.resultObj;\n\t\t\t//初始化裁剪对象\n\t\t\tthis.cropper = new __WEBPACK_IMPORTED_MODULE_0_cropperjs___default.a(this.preview, {\n\t\t\t\taspectRatio: opt.aspectRatio || 1, // 裁剪比例\n\t\t\t\tautoCropArea: 1, // opt.autoCropArea || 0.8 ,\n\t\t\t\tviewMode: 1,\n\t\t\t\tguides: opt.aspectRatio == 'Free' ? false : true,\n\t\t\t\tcropBoxResizable: opt.aspectRatio == 'Free' ? false : true,\n\t\t\t\tcropBoxMovable: opt.aspectRatio == 'Free' ? false : true,\n\t\t\t\tdragCrop: opt.aspectRatio == 'Free' ? false : true,\n\t\t\t\tbackground: false,\n\t\t\t\tcheckOrientation: true,\n\t\t\t\tcheckCrossOrigin: true,\n\t\t\t\tzoomable: true,\n\t\t\t\tzoomOnWheel: false,\n\t\t\t\tcenter: false,\n\t\t\t\ttoggleDragModeOnDblclick: false,\n\t\t\t\tready: function ready() {\n\t\t\t\t\t// console.log(self.cropper.rotate(90))\n\t\t\t\t\tconsole.log('ready');\n\n\t\t\t\t\t// 修复ios的图片旋转问题 在这个地方判断是否需要旋转\n\t\t\t\t\tif (self.Orientation) {\n\t\t\t\t\t\tswitch (self.Orientation) {\n\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\tself.cropper.rotate(90);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t\tself.cropper.rotate(-90);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tself.cropper.rotate(-180);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 旋转后置空\n\t\t\t\t\t\tself.Orientation = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// self.cropper.rotate(90);\n\t\t\t\t\tif (opt.aspectRatio == 'Free') {\n\t\t\t\t\t\tvar cropBox = self.cropper.cropBox;\n\t\t\t\t\t\tcropBox.querySelector('span.cropper-view-box').style.outline = 'none';\n\t\t\t\t\t\tself.cropper.disable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\t//创建一些必要的DOM，用于图片裁剪\n\t\tVue.prototype.createElement = function () {\n\t\t\t//初始化图片为空对象\n\t\t\tthis.preview = null;\n\n\t\t\tvar str = '<div><img id=\"clip_image\" src=\"originUrl\"/></div><button type=\"button\" id=\"cancel_clip\">取消</button><button type=\"button\" id=\"clip_button\">确定</button>';\n\t\t\tstr += '<div class=\"crop_loading\"><div class=\"crop_content\"><img src=\"' + uploadImg + '\"/><div class=\"crop_text\">' + this.options.hintTxt + '</div></div></div>';\n\t\t\tstr += '<div class=\"crop_success\"><div class=\"crop_success_text\">上传成功</div></div></div>';\n\n\t\t\tvar body = document.getElementsByTagName('body')[0];\n\t\t\tthis.reagion = document.createElement('div');\n\t\t\tthis.reagion.id = 'clip_container';\n\t\t\tthis.reagion.className = 'container';\n\t\t\tthis.reagion.innerHTML = str;\n\t\t\t//添加创建好的DOM元素\n\t\t\tbody.appendChild(this.reagion);\n\t\t\tthis.preview = document.getElementById('clip_image');\n\n\t\t\t//绑定一些方法\n\t\t\tthis.initFunction();\n\t\t};\n\t\t//初始化一些函数绑定\n\t\tVue.prototype.initFunction = function () {\n\t\t\tvar self = this;\n\t\t\tthis.clickBtn = document.getElementById('clip_button');\n\t\t\tthis.cancelBtn = document.getElementById('cancel_clip');\n\t\t\t//确定事件\n\t\t\tthis.addEvent(this.clickBtn, 'click', function () {\n\t\t\t\tself.crop();\n\t\t\t});\n\t\t\t//取消事件\n\t\t\tthis.addEvent(this.cancelBtn, 'click', function () {\n\t\t\t\tself.destoried();\n\t\t\t});\n\t\t\t//清空input的值\n\t\t\tthis.addEvent(this.fileObj, 'click', function () {\n\t\t\t\tthis.value = '';\n\t\t\t});\n\t\t};\n\n\t\t//外部接口，用于input['file']对象change时的调用\n\t\t/**\n   * 裁剪插件对外接口\n   * @param {object} e input event对象\n   * @param {object} opt 配置对象\n   * @param {HTMLElement} opt.resultObj img对象\n   * @param {object} opt.headers http包头对象\n   * @param {number} opt.aspectRatio 裁剪比例\n   * @param {boolaen}\topt.disableOrientation 是否禁止自动旋转\n   * @param {string} opt.uploadServer 上传服务器地址\n   * @param {string} opt.filed 文件上传名字\n   * @param {string} opt.hintTxt 提示文字 默认为 正在上传...\n   * @param {function} opt.uploadSuccess 上传成功回调函数\n   * @param {function} opt.uploadError 上传失败回调函数\n   */\n\t\tVue.prototype.clip = function (e, opt) {\n\t\t\tvar self = this;\n\n\t\t\t// 初始化参数\n\t\t\tparamsData = {\n\t\t\t\ttype: null,\n\t\t\t\tfilename: '',\n\t\t\t\tfiled: 'file',\n\t\t\t\tbase64Code: null\n\t\t\t};\n\n\t\t\topt.filed ? paramsData.filed = opt.filed : null;\n\n\t\t\tthis.fileObj = e.srcElement;\n\n\t\t\tvar files = e.target.files || e.dataTransfer.files;\n\n\t\t\t// 没有文件直接返回\n\t\t\tif (!files.length) return false;\n\n\t\t\t// 去获取拍照时的信息，解决拍出来的照片旋转问题\n\t\t\tif (!opt.disableOrientation) {\n\t\t\t\t__WEBPACK_IMPORTED_MODULE_2_exif_js___default.a.getData(files[0], function () {\n\t\t\t\t\tself.Orientation = __WEBPACK_IMPORTED_MODULE_2_exif_js___default.a.getTag(files[0], 'Orientation');\n\t\t\t\t\tconsole.log(self.Orientation);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\t// 设置上传地址\n\t\t\tthis.uploadServer = opt.uploadServer;\n\t\t\tthis.uploadSuccess = opt.uploadSuccess;\n\t\t\tthis.uploadError = opt.uploadError;\n\t\t\tthis.headers = opt.headers;\n\n\t\t\t//调用初始化方法\n\t\t\tthis.initilize(opt);\n\t\t\t//获取图片文件资源\n\t\t\tthis.picValue = files[0];\n\t\t\t//调用方法转成url格式\n\t\t\tthis.originUrl = this.getObjectURL(this.picValue);\n\n\t\t\t// 设置裁剪比例\n\t\t\tif (opt.aspectRatio !== undefined) {\n\t\t\t\tthis.cropper.setAspectRatio(opt.aspectRatio);\n\t\t\t}\n\n\t\t\t//每次替换图片要重新得到新的url\n\t\t\tif (this.cropper) {\n\t\t\t\tthis.cropper.replace(this.originUrl);\n\t\t\t}\n\t\t};\n\t\t// 获取文件的本地url\n\t\tVue.prototype.getObjectURL = function (file) {\n\t\t\tvar url = null;\n\t\t\tif (window.createObjectURL !== undefined) {\n\t\t\t\t// basic\n\t\t\t\turl = window.createObjectURL(file);\n\t\t\t} else if (window.URL !== undefined) {\n\t\t\t\t// mozilla(firefox)\n\t\t\t\turl = window.URL.createObjectURL(file);\n\t\t\t} else if (window.webkitURL !== undefined) {\n\t\t\t\t// webkit or chrome\n\t\t\t\turl = window.webkitURL.createObjectURL(file);\n\t\t\t}\n\t\t\treturn url;\n\t\t};\n\t\t//点击确定进行裁剪\n\t\tVue.prototype.crop = function () {\n\t\t\tvar self = this;\n\t\t\tvar image = new Image();\n\t\t\tvar croppedCanvas = void 0;\n\t\t\tvar roundedCanvas = void 0;\n\t\t\t// Crop\n\t\t\tdocument.querySelector('.crop_loading').style.display = 'block';\n\t\t\tsetTimeout(function () {\n\t\t\t\tcroppedCanvas = self.cropper.getCroppedCanvas();\n\t\t\t\t// Round\n\t\t\t\troundedCanvas = self.getRoundedCanvas(croppedCanvas);\n\t\t\t\tvar imgData = roundedCanvas.toDataURL();\n\n\t\t\t\t//判断图片是否大于100k,不大于直接上传，反之压缩\n\t\t\t\tif (imgData.length < 100 * 1024) {\n\t\t\t\t\t// 10 * 1024 100k\n\t\t\t\t\tself.resultObj.src = imgData;\n\t\t\t\t\t// 图片上传\n\t\t\t\t\tself.postImg(imgData);\n\t\t\t\t} else {\n\t\t\t\t\timage.onload = function () {\n\t\t\t\t\t\t//压缩处理\n\t\t\t\t\t\tvar data = self.compress(image, self.Orientation);\n\t\t\t\t\t\tself.resultObj.src = data;\n\t\t\t\t\t\t//图片上传\n\t\t\t\t\t\tself.postImg(data);\n\t\t\t\t\t};\n\t\t\t\t\timage.src = imgData;\n\t\t\t\t}\n\t\t\t}, 1000);\n\t\t};\n\t\t//获取裁剪图片资源\n\t\tVue.prototype.getRoundedCanvas = function (sourceCanvas) {\n\n\t\t\tvar canvas = document.createElement('canvas');\n\t\t\tvar context = canvas.getContext('2d');\n\t\t\tvar width = sourceCanvas.width;\n\t\t\tvar height = sourceCanvas.height;\n\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\n\t\t\tcontext.imageSmoothingEnabled = true;\n\t\t\tcontext.drawImage(sourceCanvas, 0, 0, width, height);\n\t\t\tcontext.globalCompositeOperation = 'destination-in';\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect(0, 0, width, height);\n\t\t\tcontext.fill();\n\n\t\t\treturn canvas;\n\t\t};\n\t\t//销毁原来的对象\n\t\tVue.prototype.destoried = function () {\n\t\t\tvar self = this;\n\t\t\t//移除事件\n\t\t\tthis.removeEvent(this.clickBtn, 'click', null);\n\t\t\tthis.removeEvent(this.cancelBtn, 'click', null);\n\t\t\tthis.removeEvent(this.fileObj, 'click', null);\n\t\t\t//移除裁剪框\n\t\t\tthis.reagion.parentNode.removeChild(this.reagion);\n\n\t\t\t//销毁裁剪对象\n\t\t\tthis.cropper.destroy();\n\t\t\tthis.cropper = null;\n\t\t};\n\t\t//图片上传\n\t\tVue.prototype.postImg = function (imageData) {\n\t\t\t// debugger;\n\n\t\t\t//这边写图片的上传\n\t\t\tconsole.log('上传数据');\n\t\t\tvar url = this.uploadServer;\n\t\t\tvar self = this;\n\n\t\t\tvar arr = imageData.split(';base64,');\n\t\t\tconsole.log(arr.length);\n\t\t\tvar fileType = arr[0];\n\t\t\tfileType = fileType.split('data:')[1];\n\n\t\t\tparamsData.base64Code = imageData;\n\t\t\tparamsData.filename = this.picValue.name;\n\t\t\tparamsData.type = fileType;\n\n\t\t\tvar headers = this.headers || {};\n\n\t\t\t__WEBPACK_IMPORTED_MODULE_1_core_image_xhr___default()('POST', url, headers, paramsData, function (res) {\n\t\t\t\tconsole.log('上传成功');\n\t\t\t\tconsole.log(res);\n\t\t\t\tvar loading = document.querySelector('.crop_loading');\n\t\t\t\tloading ? loading.style.display = 'none' : null;\n\t\t\t\tvar success = document.querySelector('.crop_success');\n\t\t\t\tsuccess ? success.style.display = 'block' : null;\n\t\t\t\tif (res && res.msgStatus === 0) {\n\t\t\t\t\tself.uploadSuccess && self.uploadSuccess(res);\n\t\t\t\t} else {\n\t\t\t\t\tself.uploadError && self.uploadError(res);\n\t\t\t\t}\n\t\t\t\t//裁剪完后摧毁对象\n\t\t\t\tself.destoried();\n\t\t\t}, function (err) {\n\t\t\t\tconsole.log('上传失败');\n\t\t\t\tconsole.log(err);\n\t\t\t\tself.uploadError && self.uploadError({ msgText: '上传失败' });\n\t\t\t\t// window.uploadError();\n\t\t\t\tvar loading = document.querySelector('.crop_loading');\n\t\t\t\tloading ? loading.style.display = 'none' : null;\n\t\t\t\tvar success = document.querySelector('.crop_success');\n\t\t\t\tsuccess ? success.style.display = 'block' : null;\n\t\t\t\t//裁剪完后摧毁对象\n\t\t\t\tself.destoried();\n\t\t\t}, true, true);\n\t\t};\n\n\t\t//图片旋转\n\t\tVue.prototype.rotateImg = function (img, direction, canvas) {\n\t\t\t//最小与最大旋转方向，图片旋转4次后回到原方向\n\t\t\tvar min_step = 0;\n\t\t\tvar max_step = 3;\n\t\t\tif (img == null) return;\n\t\t\t//img的高度和宽度不能在img元素隐藏后获取，否则会出错\n\t\t\tvar height = img.height;\n\t\t\tvar width = img.width;\n\t\t\tvar step = 2;\n\t\t\tif (step == null) {\n\t\t\t\tstep = min_step;\n\t\t\t}\n\t\t\tif (direction == 'right') {\n\t\t\t\tstep++;\n\t\t\t\t//旋转到原位置，即超过最大值\n\t\t\t\tstep > max_step && (step = min_step);\n\t\t\t} else {\n\t\t\t\tstep--;\n\t\t\t\tstep < min_step && (step = max_step);\n\t\t\t}\n\t\t\t//旋转角度以弧度值为参数\n\t\t\tvar degree = step * 90 * Math.PI / 180;\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\tswitch (step) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tctx.drawImage(img, 0, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcanvas.width = height;\n\t\t\t\t\tcanvas.height = width;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, 0, -height);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, -width, -height);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tcanvas.width = height;\n\t\t\t\t\tcanvas.height = width;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, -width, 0);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t};\n\n\t\t//图片压缩 参数 img element Orientation 旋转参数  返回 压缩后的数据\n\t\tVue.prototype.compress = function (img, Orientation) {\n\t\t\tvar canvas = document.createElement(\"canvas\"); // 创建 canvas\n\t\t\tvar ctx = canvas.getContext('2d');\n\t\t\t//瓦片canvas\n\t\t\tvar tCanvas = document.createElement(\"canvas\");\n\t\t\tvar tctx = tCanvas.getContext(\"2d\");\n\t\t\tvar initSize = img.src.length;\n\t\t\tvar width = img.width;\n\t\t\tvar height = img.height;\n\n\t\t\t// alert('width' + width);\n\t\t\t// alert('height' + height);\n\t\t\t// alert(initSize);\n\n\t\t\t//如果图片大于两千四百万像素，计算压缩比并将大小压至2400万以下\n\t\t\tvar ratio = void 0;\n\t\t\tif ((ratio = width * height / 9400000) > 1) {\n\t\t\t\t// 4000000\n\t\t\t\tconsole.log(\"大于940万像素\");\n\t\t\t\t// debugger;\n\t\t\t\tratio = Math.sqrt(ratio);\n\t\t\t\twidth /= ratio;\n\t\t\t\theight /= ratio;\n\t\t\t} else {\n\t\t\t\tratio = 1;\n\t\t\t}\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\t//        铺底色\n\t\t\tctx.fillStyle = \"#fff\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\t//如果图片像素大于100万则使用瓦片绘制\n\t\t\tvar count = void 0;\n\t\t\tif ((count = width * height / 1000000) > 1) {\n\t\t\t\tcount = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n\t\t\t\t//            计算每块瓦片的宽和高\n\t\t\t\tvar nw = ~~(width / count);\n\t\t\t\tvar nh = ~~(height / count);\n\t\t\t\ttCanvas.width = nw;\n\t\t\t\ttCanvas.height = nh;\n\t\t\t\tfor (var i = 0; i < count; i++) {\n\t\t\t\t\tfor (var j = 0; j < count; j++) {\n\t\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\n\t\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, 0, 0, width, height);\n\t\t\t}\n\t\t\t//修复ios上传图片的时候 被旋转的问题\n\t\t\t// if( Orientation != \"\" && Orientation != 1){\n\t\t\t// \tswitch(Orientation){\n\t\t\t// \t\tcase 6://需要顺时针（向左）90度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'left',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\tcase 8://需要逆时针（向右）90度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\tcase 3://需要180度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);//转两次\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t//进行最小压缩\n\t\t\tvar ndata = canvas.toDataURL('image/jpeg', 0.5); // 压缩区间 0 ~ 1\n\t\t\tconsole.log('压缩前：' + initSize);\n\t\t\tconsole.log('压缩后：' + ndata.length);\n\t\t\tconsole.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + \"%\");\n\t\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n\n\t\t\treturn ndata; // base64 数据\n\t\t};\n\n\t\t//添加事件\n\t\tVue.prototype.addEvent = function (obj, type, fn) {\n\t\t\tif (obj.addEventListener) {\n\t\t\t\tobj.addEventListener(type, fn, false);\n\t\t\t} else {\n\t\t\t\tobj.attachEvent('on' + type, fn);\n\t\t\t}\n\t\t};\n\t\t//移除事件\n\t\tVue.prototype.removeEvent = function (obj, type, fn) {\n\t\t\tif (obj.removeEventListener) {\n\t\t\t\tobj.removeEventListener(type, fn, false);\n\t\t\t} else {\n\t\t\t\tobj.detachEvent('on' + type, fn);\n\t\t\t}\n\t\t};\n\t}\n});\n\n/***/ }),\n\n/***/ 775:\n/***/ (function(module, exports, __webpack_require__) {\n\n/*!\n * Cropper.js v1.2.2\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2018 Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-01-03T13:27:18.062Z\n */\n\n(function (global, factory) {\n\t true ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Cropper = factory());\n}(this, (function () { 'use strict';\n\nvar WINDOW = typeof window !== 'undefined' ? window : {};\nvar NAMESPACE = 'cropper';\n\n// Actions\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nvar CLASS_CROP = NAMESPACE + '-crop';\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\nvar CLASS_HIDE = NAMESPACE + '-hide';\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\nvar CLASS_MODAL = NAMESPACE + '-modal';\nvar CLASS_MOVE = NAMESPACE + '-move';\n\n// Data keys\nvar DATA_ACTION = 'action';\nvar DATA_PREVIEW = 'preview';\n\n// Drag modes\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none';\n\n// Events\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_ERROR = 'error';\nvar EVENT_LOAD = 'load';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom';\n\n// RegExps\nvar REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * Check if the given value is not a number.\n */\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nfunction each(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n\n        var i = void 0;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nfunction extend(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    if (Object.assign) {\n      return Object.assign.apply(Object, [obj].concat(args));\n    }\n\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n}\n\n/**\n * Takes a function and returns a new one that will always have a particular context.\n * @param {Function} fn - The target function.\n * @param {Object} context - The new context for the function.\n * @returns {boolean} The new function.\n */\nfunction proxy(fn, context) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return function () {\n    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args2[_key3] = arguments[_key3];\n    }\n\n    return fn.apply(context, args.concat(args2));\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/ }\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n\n  each(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Hyphenate the given value.\n * @param {string} value - The value to hyphenate.\n * @returns {string} The hyphenated value.\n */\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = null;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = null;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nvar REGEXP_SPACES = /\\s+/;\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!isFunction(listener)) {\n    return;\n  }\n\n  var types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      removeListener(element, t, listener, options);\n    });\n    return;\n  }\n\n  if (element.removeEventListener) {\n    element.removeEventListener(type, listener, options);\n  } else if (element.detachEvent) {\n    element.detachEvent('on' + type, listener);\n  }\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction addListener(element, type, _listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!isFunction(_listener)) {\n    return;\n  }\n\n  var types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      addListener(element, t, _listener, options);\n    });\n    return;\n  }\n\n  if (options.once) {\n    var originalListener = _listener;\n\n    _listener = function listener() {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      removeListener(element, type, _listener, options);\n      return originalListener.apply(element, args);\n    };\n  }\n\n  if (element.addEventListener) {\n    element.addEventListener(type, _listener, options);\n  } else if (element.attachEvent) {\n    element.attachEvent('on' + type, _listener);\n  }\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nfunction dispatchEvent(element, type, data) {\n  if (element.dispatchEvent) {\n    var event = void 0;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      if (isUndefined(data)) {\n        event = new Event(type, {\n          bubbles: true,\n          cancelable: true\n        });\n      } else {\n        event = new CustomEvent(type, {\n          detail: data,\n          bubbles: true,\n          cancelable: true\n        });\n      }\n    } else if (isUndefined(data)) {\n      event = document.createEvent('Event');\n      event.initEvent(type, true, true);\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    // IE9+\n    return element.dispatchEvent(event);\n  } else if (element.fireEvent) {\n    // IE6-10 (native events only)\n    return element.fireEvent('on' + type);\n  }\n\n  return true;\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nfunction getOffset(element) {\n  var doc = document.documentElement;\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n    top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n  };\n}\n\n/**\n * Empty an element.\n * @param {Element} element - The element to empty.\n */\nfunction empty(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nvar location = WINDOW.location;\n\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\nvar navigator = WINDOW.navigator;\n\nvar IS_SAFARI_OR_UIWEBVIEW = navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);\n\n/**\n * Get an image's natural sizes.\n * @param {string} image - The target image.\n * @param {Function} callback - The callback function.\n */\nfunction getImageNaturalSizes(image, callback) {\n  // Modern browsers (except Safari)\n  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n    callback(image.naturalWidth, image.naturalHeight);\n    return;\n  }\n\n  var newImage = document.createElement('img');\n  var body = document.body || document.documentElement;\n\n  newImage.onload = function () {\n    callback(newImage.width, newImage.height);\n\n    if (!IS_SAFARI_OR_UIWEBVIEW) {\n      body.removeChild(newImage);\n    }\n  };\n\n  newImage.src = image.src;\n\n  // iOS Safari will convert the image automatically\n  // with its orientation once append it into DOM (#279)\n  if (!IS_SAFARI_OR_UIWEBVIEW) {\n    newImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n    body.appendChild(newImage);\n  }\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = extend({}, pointers);\n  var ratios = [];\n\n  each(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    each(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  if (endOnly) {\n    return end;\n  }\n\n  return extend({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  each(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getContainSizes(_ref4) {\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getContainSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getContainSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  });\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n  var params = [-imageNaturalWidth / 2, -imageNaturalHeight / 2, imageNaturalWidth, imageNaturalHeight];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  each(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  each(uint8, function (value) {\n    data += fromCharCode(value);\n  });\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = extend({}, imageData);\n    this.initialCanvasData = extend({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getContainSizes = getContainSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getContainSizes.width;\n      minCanvasHeight = _getContainSizes.height;\n\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, extend({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    extend(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, extend({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(extend({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio;\n\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = extend({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, extend({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n\n    if (this.complete) {\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.image2 = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview.querySelector ? [preview] : document.querySelectorAll(preview);\n\n    this.previews = previews;\n\n    each(previews, function (element) {\n      var img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(element, DATA_PREVIEW, {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        html: element.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      empty(element);\n      element.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    each(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.image2, extend({\n      width: width,\n      height: height\n    }, getTransforms(extend({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    each(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], extend({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(extend({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = proxy(this.cropStart, this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = proxy(this.wheel, this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = proxy(this.dblclick, this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = proxy(this.cropMove, this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = proxy(this.cropEnd, this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = proxy(this.resize, this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData = void 0;\n      var cropBoxData = void 0;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(each(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(each(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      each(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        extend(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      extend(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    each(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.disabled) {\n      if (!this.cropped) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = extend({}, this.initialImageData);\n      this.canvasData = extend({}, this.initialCanvasData);\n      this.cropBoxData = extend({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      extend(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [onlyColorChanged] - Indicate if the new image only changed color.\n   * @returns {Object} this\n   */\n  replace: function replace(url) {\n    var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (onlyColorChanged) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.image2.src = url;\n\n          each(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        // Clear previous data\n        this.options.data = null;\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Destroy the cropper and remove the instance from the image\n  destroy: function destroy() {\n    var element = this.element,\n        image = this.image;\n\n\n    if (this.loaded) {\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.unbuild();\n      removeClass(element, CLASS_HIDDEN);\n    } else if (this.isImg) {\n      removeListener(element, EVENT_LOAD, this.onStart);\n    } else if (image) {\n      image.parentNode.removeChild(image);\n    }\n\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} offsetY - The relative offset distance on the y-axis.\n   * @returns {Object} this\n   */\n  move: function move(offsetX, offsetY) {\n    var _canvasData = this.canvasData,\n        left = _canvasData.left,\n        top = _canvasData.top;\n\n\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Object} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n\n    var changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Object} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n\n\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n\n    var transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      each(data, function (n, i) {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Object} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n\n    var cropBoxData = {};\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? extend({}, this.containerData) : {};\n  },\n\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.loaded ? extend({}, this.imageData) : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n\n    var data = {};\n\n    if (this.ready) {\n      each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Object} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Object} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _getData = this.getData(),\n        x = _getData.x,\n        y = _getData.y,\n        initialWidth = _getData.width,\n        initialHeight = _getData.height;\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    });\n\n    var _getContainSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || initialWidth,\n      height: options.height || initialHeight\n    }),\n        width = _getContainSizes.width,\n        height = _getContainSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var sourceWidth = source.width;\n    var sourceHeight = source.height;\n\n    // Source canvas parameters\n    var srcX = x;\n    var srcY = y;\n    var srcWidth = void 0;\n    var srcHeight = void 0;\n\n    // Destination canvas parameters\n    var dstX = void 0;\n    var dstY = void 0;\n    var dstWidth = void 0;\n    var dstHeight = void 0;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    var params = [srcX, srcY, srcWidth, srcHeight];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    }\n\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Object} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Object} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n\n    if (this.loaded && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = extend({}, DEFAULTS, isPlainObject(options) && options);\n    this.complete = false;\n    this.cropped = false;\n    this.disabled = false;\n    this.isImg = false;\n    this.limited = false;\n    this.loaded = false;\n    this.ready = false;\n    this.replaced = false;\n    this.wheeling = false;\n    this.originalUrl = '';\n    this.canvasData = null;\n    this.cropBoxData = null;\n    this.previews = null;\n    this.pointers = {};\n    this.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var element = this.element;\n\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData(element, NAMESPACE)) {\n        return;\n      }\n\n      setData(element, NAMESPACE, this);\n\n      if (tagName === 'img') {\n        this.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url;\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n\n      var element = this.element,\n          options = this.options;\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = function () {\n        _this.clone();\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n\n      var orientation = getOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n\n      var start = proxy(this.start, this);\n      var stop = proxy(this.stop, this);\n\n      this.image = image;\n      this.onStart = start;\n      this.onStop = stop;\n\n      if (this.isImg) {\n        if (element.complete) {\n          this.start();\n        } else {\n          addListener(element, EVENT_LOAD, start);\n        }\n      } else {\n        addListener(image, EVENT_LOAD, start);\n        addListener(image, EVENT_ERROR, stop);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(event) {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n\n      if (event) {\n        removeListener(image, EVENT_LOAD, this.onStart);\n        removeListener(image, EVENT_ERROR, this.onStop);\n      }\n\n      getImageNaturalSizes(image, function (naturalWidth, naturalHeight) {\n        extend(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.loaded = true;\n        _this2.build();\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var image = this.image;\n\n\n      removeListener(image, EVENT_LOAD, this.onStart);\n      removeListener(image, EVENT_ERROR, this.onStop);\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      var _this3 = this;\n\n      if (!this.loaded) {\n        return;\n      }\n\n      // Unbuild first when replace\n      if (this.ready) {\n        this.unbuild();\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image;\n\n      // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n\n      template.innerHTML = TEMPLATE;\n\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\n\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\n      this.face = face;\n\n      canvas.appendChild(image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      this.cropped = options.autoCrop;\n\n      if (options.autoCrop) {\n        if (options.modal) {\n          addClass(dragBox, CLASS_MODAL);\n        }\n      } else {\n        addClass(cropBox, CLASS_HIDDEN);\n      }\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, NAMESPACE + '-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\n      }\n\n      this.setDragMode(options.dragMode);\n      this.render();\n      this.ready = true;\n      this.setData(options.data);\n\n      // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n      this.completing = setTimeout(function () {\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n        dispatchEvent(element, EVENT_CROP, _this3.getData());\n\n        _this3.complete = true;\n      }, 0);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      if (!this.complete) {\n        clearTimeout(this.completing);\n      }\n\n      this.ready = false;\n      this.complete = false;\n      this.initialImageData = null;\n\n      // Clear `initialCanvasData` is necessary when replace\n      this.initialCanvasData = null;\n      this.initialCropBoxData = null;\n      this.containerData = null;\n      this.canvasData = null;\n\n      // Clear `cropBoxData` is necessary when replace\n      this.cropBoxData = null;\n      this.unbind();\n      this.resetPreview();\n      this.previews = null;\n      this.viewBox = null;\n      this.cropBox = null;\n      this.dragBox = null;\n      this.canvas = null;\n      this.container = null;\n      this.cropper.parentNode.removeChild(this.cropper);\n      this.cropper = null;\n    }\n\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      extend(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nextend(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nreturn Cropper;\n\n})));\n\n\n/***/ }),\n\n/***/ 776:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = __webpack_require__.p + \"/asset/imgs/loading50c5e3e79b276c92df6cc52caeb464f0.gif\";\n\n/***/ }),\n\n/***/ 777:\n/***/ (function(module, exports) {\n\n// removed by extract-text-webpack-plugin\n\n/***/ }),\n\n/***/ 778:\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"content\", attrs: { id: \"test\" } },\n    [\n      _c(\n        \"mu-list\",\n        { staticClass: \"normal-list\" },\n        [\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"All mail\" } },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"Trash\" } },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            {\n              staticClass: \"normal-list-item\",\n              attrs: { title: \"Spam\", afterText: \"你好啊啊啊\" }\n            },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"Follow up\" } },\n            [\n              _c(\"span\", { attrs: { slot: \"right\" }, slot: \"right\" }, [\n                _c(\"i\", { staticClass: \"iconfont icon-list-more\" })\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.openModal } }, [_vm._v(\"点我打开模态框\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.enterCommentView } }, [_vm._v(\"好友页面\")]),\n      _vm._v(\" \"),\n      _c(\"input\", {\n        staticClass: \"upload-input\",\n        attrs: { type: \"file\", accept: \"image/*\" },\n        on: {\n          change: function($event) {\n            _vm.changeImg($event)\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _vm._m(0),\n      _vm._v(\" \"),\n      _c(\n        \"mu-popup\",\n        {\n          attrs: { position: \"bottom\", open: _vm.isShowModal2 },\n          on: {\n            close: function($event) {\n              _vm.closeMode2()\n            }\n          }\n        },\n        [\n          _c(\"div\", { on: { click: _vm.closeMode2 } }, [_vm._v(\"点我关闭\")]),\n          _vm._v(\" \"),\n          _c(\"div\", [_vm._v(\"大傻逼\")])\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm._m(1),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.chooseFile } }, [_vm._v(\"点我选择头像\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.choosePhoto } }, [_vm._v(\"点我选择相片\")]),\n      _vm._v(\" \"),\n      _c(\"my-croppa\", {\n        ref: \"croppa\",\n        attrs: { option: _vm.myCroppaOption },\n        on: { confirm: _vm.myCroppaConfirm }\n      }),\n      _vm._v(\" \"),\n      _vm.a\n        ? _c(\n            \"mu-popup\",\n            {\n              attrs: {\n                position: \"bottom\",\n                popupClass: \"modal\",\n                open: _vm.isShowModal\n              },\n              on: {\n                close: function($event) {\n                  _vm.closeModel()\n                }\n              }\n            },\n            [\n              _c(\"smooth-picker\", {\n                ref: \"smoothPicker\",\n                attrs: { data: _vm.pickerData, change: _vm.change }\n              })\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"img-test\" }, [\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: __webpack_require__(599)\n            }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: __webpack_require__(584)\n            }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: __webpack_require__(600)\n            }\n          })\n        ]\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"image-collector\", attrs: { id: \"image-collector\" } },\n      [_c(\"div\", { staticClass: \"swiper-wrapper\" })]\n    )\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\n/* harmony default export */ __webpack_exports__[\"a\"] = (esExports);\nif (false) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-a029b292\", esExports)\n  }\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// asset/js/2.21ea556f167422be7daf.js","var disposed = false\nfunction injectStyle (ssrContext) {\n  if (disposed) return\n  require(\"!!../../../node_modules/extract-text-webpack-plugin/dist/loader.js?{\\\"id\\\":4,\\\"omit\\\":1,\\\"remove\\\":true}!vue-style-loader!css-loader?{\\\"minimize\\\":true}!../../../node_modules/vue-loader/lib/style-compiler/index?{\\\"vue\\\":true,\\\"id\\\":\\\"data-v-a029b292\\\",\\\"scoped\\\":false,\\\"hasInlineConfig\\\":false}!less-loader?{\\\"globalVars\\\":{\\\"museUiTheme\\\":\\\"'J:\\\\\\\\qianduan\\\\\\\\vue\\\\\\\\vue-project\\\\\\\\ailink-wechat\\\\\\\\src\\\\\\\\assets\\\\\\\\css\\\\\\\\muse-custom-theme.less'\\\",\\\"museUiStylePath\\\":\\\"'J:\\\\\\\\qianduan\\\\\\\\vue\\\\\\\\vue-project\\\\\\\\ailink-wechat\\\\\\\\node_modules\\\\\\\\muse-ui\\\\\\\\src\\\\\\\\styles'\\\"}}!../../../node_modules/vue-loader/lib/selector?type=styles&index=0&bustCache!./index.vue\")\n}\nvar normalizeComponent = require(\"!../../../node_modules/vue-loader/lib/component-normalizer\")\n/* script */\nimport __vue_script__ from \"!!awesome-typescript-loader!tslint-loader!./index.ts\"/* template */\nimport __vue_template__ from \"!!../../../node_modules/vue-loader/lib/template-compiler/index?{\\\"id\\\":\\\"data-v-a029b292\\\",\\\"hasScoped\\\":false,\\\"buble\\\":{\\\"transforms\\\":{}}}!../../../node_modules/vue-loader/lib/selector?type=template&index=0&bustCache!./index.vue\"\n/* template functional */\n  var __vue_template_functional__ = false\n/* styles */\nvar __vue_styles__ = injectStyle\n/* scopeId */\nvar __vue_scopeId__ = null\n/* moduleIdentifier (server only) */\nvar __vue_module_identifier__ = null\nvar Component = normalizeComponent(\n  __vue_script__,\n  __vue_template__,\n  __vue_template_functional__,\n  __vue_styles__,\n  __vue_scopeId__,\n  __vue_module_identifier__\n)\nComponent.options.__file = \"src\\\\pages\\\\test\\\\index.vue\"\nif (Component.esModule && Object.keys(Component.esModule).some(function (key) {  return key !== \"default\" && key.substr(0, 2) !== \"__\"})) {  console.error(\"named exports are not supported in *.vue files.\")}\n\n/* hot reload */\nif (module.hot) {(function () {\n  var hotAPI = require(\"vue-hot-reload-api\")\n  hotAPI.install(require(\"vue\"), false)\n  if (!hotAPI.compatible) return\n  module.hot.accept()\n  if (!module.hot.data) {\n    hotAPI.createRecord(\"data-v-a029b292\", Component.options)\n  } else {\n    hotAPI.reload(\"data-v-a029b292\", Component.options)\n' + '  }\n  module.hot.dispose(function (data) {\n    disposed = true\n  })\n})()}\n\nexport default Component.exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/pages/test/index.vue\n// module id = 564\n// module chunks = 2","module.exports = __webpack_public_path__ + \"/asset/imgs/weixiaobao4b8e1e830f46d01a7e6b0c07fbfa5b4e.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/weixiaobao.png\n// module id = 584\n// module chunks = 2 8","module.exports = __webpack_public_path__ + \"/asset/imgs/avatare274a23e362234e96f8fa2898b0d944c.png\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/avatar.png\n// module id = 599\n// module chunks = 2","module.exports = __webpack_public_path__ + \"/asset/imgs/timgf03ae5d3eaf33c8b5bffa4c570c41831.jpg\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/timg.jpg\n// module id = 600\n// module chunks = 2","/*\r\n * @Author: qiao \r\n * @Date: 2017-12-25 20:03:53 \r\n * @Last Modified by: mikey.zhaopeng\r\n * @Last Modified time: 2018-01-31 14:27:15\r\n * @description:  测试页面\r\n */\r\n\r\nimport Vue from 'vue';\r\nimport Component from 'vue-class-component';\r\n\r\n// import { Observable } from 'rxjs/Observable';\r\nimport { Subject } from 'rxjs/Subject';\r\n\r\nimport { Action, State } from 'vuex-class';\r\nimport popup from 'muse-ui/popup';\r\nimport { MODAL_0, MODAL_1, UPLOAD_AVATAR_URL, UPLOAD_ID_CARD } from '~/config';\r\nimport router from '~/router';\r\n\r\nimport 'vue-smooth-picker/dist/css/style.css';\r\nimport SmoothPicker from 'vue-smooth-picker';\r\nimport { ToastMsg } from '~/entity/toast';\r\nimport { IAuth } from '~/entity/auth';\r\n\r\n// import '~/vendors/photoView/image-collector.js';\r\n// import '~/assets/css/image-collector.less';\r\n\r\nimport clipper from '~/vendors/clipper/clipper.js'; // 引入裁剪插件\r\nimport '~/vendors/clipper/style.css';\r\n\r\n/* 图片压缩上传 */\r\nimport xhr from 'core-image-xhr';\r\nimport { IImgXhrParams } from '~/entity/imgxhr';\r\n\r\n// import '~/vendors/photoView/image-collector.js';\r\nVue.use(SmoothPicker);\r\nVue.use(clipper);\r\n\r\nlet count = 0;\r\n\r\n// 裁剪压缩上传\r\nimport Croppa from '~/components/croppa/index.vue';\r\nimport { ICroppaOption } from '~/components/croppa/croppa';\r\n\r\n// 图片预览\r\n// import VuePreview from 'vue-preview';\r\n// Vue.use(VuePreview);\r\n\r\n// // # 引入\r\n// import preview from 'vue-photo-preview';\r\n// import 'vue-photo-preview/dist/skin.css';\r\n// Vue.use(preview);\r\n\r\nconst img1 = require('../../assets/images/avatar.png');\r\nconst img2 = require('../../assets/images/weixiaobao.png');\r\nconst img3 = require('../../assets/images/timg.jpg');\r\n\r\n@Component({\r\n    components: {\r\n        'mu-popup': popup,\r\n        'my-croppa': Croppa\r\n    }\r\n})\r\nexport default class TestComp extends Vue {\r\n\r\n    $refs: {\r\n        mychild: any\r\n    };\r\n\r\n    @State(state => state.user.user)\r\n    userInfo;\r\n\r\n    /* 底部modal */\r\n    @State(state => state.modal.MODAL_0)\r\n    isShowModal;    \r\n\r\n    @State(state => state.modal.MODAL_1)\r\n    isShowModal2;\r\n\r\n    @Action('addModal')\r\n    addModal;\r\n\r\n    @Action('showLoading')\r\n    showLoading;\r\n\r\n    @Action('hideLoading')\r\n    hideLoading;\r\n\r\n    @Action('showToast')\r\n    showToast;\r\n\r\n    a = false;\r\n\r\n    // picker控件数据\r\n    pickerData: any[] = [\r\n        {\r\n          currentIndex: 0,\r\n          flex: 3,\r\n          list: [\r\n            'Plan A - free', 'Plan B - $50', 'Plan C - $100'\r\n          ],\r\n          onClick: this.clickOnPlan,\r\n          textAlign: 'center',\r\n          className: 'row-group'\r\n        },\r\n        {\r\n          divider: true,\r\n          flex: 1,\r\n          text: 'product',\r\n          textAlign: 'center',\r\n          className: 'divider'\r\n        },\r\n        {\r\n          currentIndex: 2,\r\n          flex: 3,\r\n          list: [\r\n            '1 * A item', '2 * A items', '3 * A items', '4 * A items', '5 * A items'\r\n          ],\r\n          onClick: this.clickOnProduct,\r\n          textAlign: 'center',\r\n          className: 'item-group'\r\n        }\r\n    ];\r\n\r\n    myCroppaOption: ICroppaOption = {\r\n        compressionRate: 0.8,\r\n        quality: 2\r\n        // fromCamera: true\r\n    };\r\n\r\n    isShowCropper = false;\r\n\r\n    imgs = [\r\n        {\r\n            src: img1,\r\n            w: 414,\r\n            h: 736\r\n        },\r\n        {\r\n            src: img2,\r\n            w: 414,\r\n            h: 736\r\n        },\r\n        {\r\n            src: img3,\r\n            w: 414,\r\n            h: 736\r\n        }\r\n    ];\r\n\r\n    clickob() {\r\n        console.log('test');\r\n        // this['$observables'].obtest.subscribe(msg => {\r\n        //     console.log(msg);\r\n        // });\r\n        count++;\r\n        this['$observables'].obtest.next(count);\r\n    }\r\n\r\n    change() {\r\n        // console.log('change');\r\n        const ciList = this.$refs['smoothPicker'].getCurrentIndexList();\r\n        const planDetail = this.pickerData[0].list[ciList[0]];\r\n        const productDetail = this.pickerData[2].list[ciList[2]];\r\n        console.log(planDetail);\r\n        console.log(productDetail);\r\n\r\n        // if (productDetail === ) {\r\n\r\n        // }\r\n    }\r\n\r\n    clickOnPlan() {\r\n        console.log('点击了clickOnPlan');\r\n    }\r\n\r\n    clickOnProduct() {\r\n        console.log('点击了clickOnProduct');\r\n    }\r\n\r\n    openModal() {\r\n        this.addModal(MODAL_0);\r\n    }\r\n\r\n    closeModel() {\r\n        history.back();\r\n    }\r\n\r\n    openModal2() {\r\n        this.addModal(MODAL_1);\r\n    }   \r\n    \r\n    closeMode2() {\r\n        history.back();\r\n    }\r\n\r\n    enterCommentView() {\r\n        router.push({\r\n            name: 'commentView',\r\n            params: {\r\n                action: 'mySelf',\r\n                id: this.userInfo.uid\r\n            }\r\n        });\r\n    }\r\n\r\n    activated() {\r\n        this.a = true;\r\n    }\r\n\r\n    deactivated() {\r\n        this.a = false;\r\n    }\r\n\r\n    uploadPhoto(event) {\r\n        let image = document.getElementById('auth-img'); // 设置image\r\n        this['clip'](event , { // 设置clip\r\n            resultObj : image,\r\n            headers: {\r\n                'access-token': this['$store'].state.token\r\n            },\r\n            hintTxt: '图片识别中',\r\n            aspectRatio: NaN,\r\n            disableOrientation: true,\r\n\t\t\t// aspectRatio : 'Free', // 裁剪比例\r\n            uploadServer: 'http://172.18.10.242:8080', // UPLOAD_ID_CARD,\r\n            filed: 'idcard',\r\n            uploadSuccess(res) {\r\n                console.log('uploadSuccess');\r\n                console.log(res);\r\n                this.showToast(new ToastMsg('识别身份证成功'));\r\n            },\r\n            uploadError(res) {\r\n                console.log('uploadError');   \r\n                this.showToast(new ToastMsg(res.msgText));\r\n            }\r\n        });\r\n    }\r\n\r\n    changeImg(event) {\r\n        this.$refs['cropper'].changeFile(event);\r\n    }\r\n\r\n    /**\r\n     * 获取文件对象的url\r\n     */\r\n    getObjectURL(file) {\r\n        let url = null ;\r\n        if (window['createObjectURL'] !== undefined) { // basic\r\n            url = window['createObjectURL'](file) ;\r\n        } else if (window.URL !== undefined) { // mozilla(firefox)\r\n            url = window.URL.createObjectURL(file) ;\r\n        } else if (window['webkitURL'] !== undefined) { // webkit or chrome\r\n            url = window['webkitURL'].createObjectURL(file) ;\r\n        }\r\n        return url;\r\n    }\r\n\r\n    cancelCrop() {\r\n        this.isShowCropper = false;\r\n        console.log('取消');\r\n    }\r\n\r\n    confirmCrop(data) {\r\n        console.log('确认');\r\n        const url = UPLOAD_AVATAR_URL;\r\n        const headers = {\r\n            'access-token': this['$store'].state.token\r\n        };\r\n        const params: IImgXhrParams = {\r\n            base64Code: data.base64Code,\r\n            type: data.type,\r\n            filename: data.filename,\r\n            filed: 'file'\r\n        };\r\n        const cropper = this.$refs['cropper'];\r\n        this.showLoading();\r\n        xhr('POST', url, headers, params, res => {\r\n            console.log('上传成功');\r\n            console.log(res);\r\n            this.hideLoading();\r\n            cropper.hide();\r\n        }, err => {\r\n            console.log('上传失败');\r\n            console.log(err);\r\n            this.hideLoading();\r\n            cropper.hide();\r\n        }, true, true);\r\n    }\r\n\r\n    /* 选择文件 */\r\n    chooseFile() {\r\n        this.myCroppaOption = {\r\n            compressionRate: 0.8,\r\n            quality: 2,\r\n            fullScreen: false,\r\n            fromCamera: false\r\n        };\r\n        this.$refs['croppa'].chooseFile();\r\n    }\r\n\r\n    choosePhoto() {\r\n        this.myCroppaOption = {\r\n            compressionRate: 0.5,\r\n            quality: 6,\r\n            fullScreen: true,\r\n            fromCamera: false\r\n        };\r\n        this.$refs['croppa'].chooseFile();\r\n    }\r\n\r\n    myCroppaConfirm(data) { \r\n        // debugger;\r\n        const url = UPLOAD_ID_CARD;\r\n        const headers = {\r\n            'access-token': this['$store'].state.token\r\n        };\r\n        const params: IImgXhrParams = {\r\n            base64Code: data.base64Code,\r\n            type: data.type,\r\n            filename: data.filename,\r\n            filed: 'idcard'\r\n        };\r\n        const croppa = <any>this.$refs['croppa'];\r\n        this.showLoading();\r\n        xhr('POST', url, headers, params, res => {\r\n            console.log('上传成功');\r\n            console.log(res);\r\n            if (res.msgStatus === 0) {\r\n                alert(res.obj.name);\r\n                this.showToast(new ToastMsg('上传成功'));\r\n            } else {\r\n                this.showToast(new ToastMsg(res.msgText));\r\n            }\r\n            \r\n            this.hideLoading();\r\n            croppa.cancel();\r\n        }, err => {\r\n            console.log('上传失败');\r\n            console.log(err);\r\n            this.hideLoading();\r\n            this.showToast(new ToastMsg('上传失败'));\r\n            croppa.cancel();\r\n        }, true, true);\r\n    }\r\n\r\n    /* 图片预览 */\r\n    showImg(index: number) {\r\n        this['$preview'].open(index, this.imgs);\r\n    }\r\n}\r\n\n\n\n// WEBPACK FOOTER //\n// ./node_modules/tslint-loader!./src/pages/test/index.ts","/* eslint-disable */\n\n/**\n *\tname : vue 的图片裁减压缩处理\n *   author : 陈威\n *   date : 2017/6/20\n *   dependence :\n *       cropper 第三方的一个裁剪库\n *       exif    获取图片源信息，解决ios图片旋转的问题\n * */\n\n\nimport Cropper from 'cropperjs'\nimport xhr from 'core-image-xhr';\nimport Exif from 'exif-js'\nconst uploadImg = require('~/assets/images/loading.gif');\n\nlet paramsData;\nexport default {\n\tinstall( Vue ){\n\t\t//初始化方法\n\t\tVue.prototype.initilize = function( opt ){\n\t\t\t// debugger;\n\t\t\tlet self = this;\n\n\t\t\t// 设置默认提示文本\n\t\t\t!opt.hintTxt ? opt.hintTxt = '正在上传...' : null; \n\n\t\t\tthis.options = opt;\n\t\t\t\n\t\t\t//创建dom\n\t\t\tthis.createElement();\n\t\t\tthis.resultObj = opt.resultObj;\n\t\t\t//初始化裁剪对象\n\t\t\tthis.cropper = new Cropper( this.preview , {\n\t\t\t\taspectRatio : opt.aspectRatio || 1 , // 裁剪比例\n\t\t\t\tautoCropArea : 1, // opt.autoCropArea || 0.8 ,\n\t\t\t\tviewMode : 1,\n\t\t\t\tguides : opt.aspectRatio == 'Free' ? false : true ,\n\t\t\t\tcropBoxResizable : opt.aspectRatio == 'Free' ? false : true ,\n\t\t\t\tcropBoxMovable : opt.aspectRatio == 'Free' ? false : true ,\n\t\t\t\tdragCrop : opt.aspectRatio == 'Free' ? false : true ,\n\t\t\t\tbackground : false,\n\t\t\t\tcheckOrientation : true ,\n\t\t\t\tcheckCrossOrigin : true ,\n\t\t\t\tzoomable : true, \n\t\t\t\tzoomOnWheel : false ,\n\t\t\t\tcenter : false ,\n\t\t\t\ttoggleDragModeOnDblclick : false ,\n\t\t\t\tready : function () {\n\t\t\t\t\t// console.log(self.cropper.rotate(90))\n\t\t\t\t\tconsole.log('ready');\n\n\t\t\t\t\t// 修复ios的图片旋转问题 在这个地方判断是否需要旋转\n\t\t\t\t\tif (self.Orientation) {\n\t\t\t\t\t\tswitch (self.Orientation) {\n\t\t\t\t\t\t\tcase 6:\n\t\t\t\t\t\t\t\tself.cropper.rotate(90);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 8:\n\t\t\t\t\t\t\t\tself.cropper.rotate(-90);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\tself.cropper.rotate(-180);\n\t\t\t\t\t\t\t\tbreak\n\t\t\t\t\t\t}\n\t\t\t\t\t\t// 旋转后置空\n\t\t\t\t\t\tself.Orientation = null;\n\t\t\t\t\t}\n\n\t\t\t\t\t// self.cropper.rotate(90);\n\t\t\t\t\tif( opt.aspectRatio == 'Free' ){\n\t\t\t\t\t\tlet cropBox = self.cropper.cropBox;\n\t\t\t\t\t\tcropBox.querySelector('span.cropper-view-box').style.outline = 'none';\n\t\t\t\t\t\tself.cropper.disable();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t};\n\t\t//创建一些必要的DOM，用于图片裁剪\n\t\tVue.prototype.createElement = function () {\n\t\t\t//初始化图片为空对象\n\t\t\tthis.preview = null;\n\n\t\t\tlet str = '<div><img id=\"clip_image\" src=\"originUrl\"/></div><button type=\"button\" id=\"cancel_clip\">取消</button><button type=\"button\" id=\"clip_button\">确定</button>';\n\t\t\tstr+= '<div class=\"crop_loading\"><div class=\"crop_content\"><img src=\"' + uploadImg + '\"/><div class=\"crop_text\">' + this.options.hintTxt +'</div></div></div>';\n\t\t\tstr+= '<div class=\"crop_success\"><div class=\"crop_success_text\">上传成功</div></div></div>';\n\n\t\t\tlet body = document.getElementsByTagName('body')[0];\n\t\t\tthis.reagion = document.createElement('div');\n\t\t\tthis.reagion.id = 'clip_container';\n\t\t\tthis.reagion.className = 'container';\n\t\t\tthis.reagion.innerHTML = str;\n\t\t\t//添加创建好的DOM元素\n\t\t\tbody.appendChild(this.reagion);\n\t\t\tthis.preview = document.getElementById('clip_image');\n\t\t\t\n\t\t\t//绑定一些方法\n\t\t\tthis.initFunction();\n\t\t}\n\t\t//初始化一些函数绑定\n\t\tVue.prototype.initFunction = function  () {\n\t\t\tlet self =this;\n\t\t\tthis.clickBtn = document.getElementById('clip_button');\n\t\t\tthis.cancelBtn = document.getElementById('cancel_clip');\n\t\t\t//确定事件\n\t\t\tthis.addEvent( this.clickBtn , 'click' , function () {\n\t\t\t\tself.crop();\n\t\t\t})\n\t\t\t//取消事件\n\t\t\tthis.addEvent( this.cancelBtn , 'click' , function () {\n\t\t\t\tself.destoried();\n\t\t\t})\n\t\t\t//清空input的值\n\t\t\tthis.addEvent( this.fileObj , 'click' , function () {\n\t\t\t\tthis.value = '';\n\t\t\t})\n\t\t}\n\t\t\n\t\t//外部接口，用于input['file']对象change时的调用\n\t\t/**\n\t\t * 裁剪插件对外接口\n\t\t * @param {object} e input event对象\n\t\t * @param {object} opt 配置对象\n\t\t * @param {HTMLElement} opt.resultObj img对象\n\t\t * @param {object} opt.headers http包头对象\n\t\t * @param {number} opt.aspectRatio 裁剪比例\n\t\t * @param {boolaen}\topt.disableOrientation 是否禁止自动旋转\n\t\t * @param {string} opt.uploadServer 上传服务器地址\n\t\t * @param {string} opt.filed 文件上传名字\n\t\t * @param {string} opt.hintTxt 提示文字 默认为 正在上传...\n\t\t * @param {function} opt.uploadSuccess 上传成功回调函数\n\t\t * @param {function} opt.uploadError 上传失败回调函数\n\t\t */\n\t\tVue.prototype.clip = function ( e , opt ) {\n\t\t\tlet self = this;\t\n\t\t\t\n\t\t\t// 初始化参数\n\t\t\tparamsData = {\n\t\t\t\ttype: null,\n\t\t\t\tfilename: '',\n\t\t\t\tfiled: 'file',\n\t\t\t\tbase64Code: null\n\t\t\t};\n\n\t\t\topt.filed ? paramsData.filed = opt.filed : null;\n\n\t\t\tthis.fileObj = e.srcElement;\n\t\t\t\n\t\t\tlet files = e.target.files || e.dataTransfer.files;\n\t\t\n\t\t\t// 没有文件直接返回\n\t\t\tif (!files.length) return false;\n\t\t\t\n\t\t\t// 去获取拍照时的信息，解决拍出来的照片旋转问题\n\t\t\tif (!opt.disableOrientation) {\n\t\t\t\tExif.getData( files[0] , function(){\n\t\t\t\t\tself.Orientation = Exif.getTag( files[0], 'Orientation');\n\t\t\t\t\tconsole.log(self.Orientation);\n\t\t\t\t});\n\t\t\t}\n\t\t\t\n\t\t\t// 设置上传地址\n\t\t\tthis.uploadServer = opt.uploadServer;\n\t\t\tthis.uploadSuccess = opt.uploadSuccess;\n\t\t\tthis.uploadError = opt.uploadError;\n\t\t\tthis.headers = opt.headers;\n\n\t\t\t//调用初始化方法\n\t\t\tthis.initilize( opt );\n\t\t\t//获取图片文件资源\n\t\t\tthis.picValue = files[0];\n\t\t\t//调用方法转成url格式\n\t\t\tthis.originUrl = this.getObjectURL( this.picValue );\n\n\t\t\t// 设置裁剪比例\n\t\t\tif (opt.aspectRatio !== undefined) {\n\t\t\t\tthis.cropper.setAspectRatio(opt.aspectRatio);\n\t\t\t}\n\n\t\t\t//每次替换图片要重新得到新的url\n\t\t\tif(this.cropper){\n\t\t\t\tthis.cropper.replace(this.originUrl);\n\t\t\t}\n\t\t}\n\t\t// 获取文件的本地url\n\t\tVue.prototype.getObjectURL = function(file) {\n\t\t\tlet url = null ;\n\t\t\tif (window.createObjectURL!== undefined) { // basic\n\t\t\t\turl = window.createObjectURL(file) ;\n\t\t\t} else if (window.URL!== undefined) { // mozilla(firefox)\n\t\t\t\turl = window.URL.createObjectURL(file) ;\n\t\t\t} else if (window.webkitURL!== undefined) { // webkit or chrome\n\t\t\t\turl = window.webkitURL.createObjectURL(file) ;\n\t\t\t}\n\t\t\treturn url ;\n\t\t}\n\t\t//点击确定进行裁剪\n\t\tVue.prototype.crop  = function () {\n\t\t\tlet self = this;\n\t\t\tlet image = new Image();\n\t\t\tlet croppedCanvas;\n\t\t\tlet roundedCanvas;\n\t\t\t// Crop\n\t\t\tdocument.querySelector('.crop_loading').style.display = 'block';\n\t\t\tsetTimeout(function () {\n\t\t\t\tcroppedCanvas = self.cropper.getCroppedCanvas();\n\t\t\t\t// Round\n\t\t\t\troundedCanvas = self.getRoundedCanvas(croppedCanvas);\n\t\t\t\tlet imgData = roundedCanvas.toDataURL();\n\t\t\t\t\n\t\t\t\t//判断图片是否大于100k,不大于直接上传，反之压缩\n\t\t\t\tif( imgData.length < ( 100 * 1024) ){ \n\t\t\t\t\t// 10 * 1024 100k\n\t\t\t\t\tself.resultObj.src = imgData;\n\t\t\t\t\t// 图片上传\n\t\t\t\t\tself.postImg( imgData );\n\t\t\t\t}else{\n\t\t\t\t\timage.onload = function () {\n\t\t\t\t\t\t//压缩处理\n\t\t\t\t\t\tlet data = self.compress( image , self.Orientation );\n\t\t\t\t\t\tself.resultObj.src = data;\n\t\t\t\t\t\t//图片上传\n\t\t\t\t\t\tself.postImg( data );\n\t\t\t\t\t}\n\t\t\t\t\timage.src = imgData;\n\t\t\t\t}\n\t\t\t},1000)\n\t\t}\n\t\t//获取裁剪图片资源\n\t\tVue.prototype.getRoundedCanvas = function(sourceCanvas) {\n\t\t\t\n\t\t\tlet canvas = document.createElement('canvas');\n\t\t\tlet context = canvas.getContext('2d');\n\t\t\tlet width = sourceCanvas.width;\n\t\t\tlet height = sourceCanvas.height;\n\t\t\t\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\t\n\t\t\tcontext.imageSmoothingEnabled = true;\n\t\t\tcontext.drawImage(sourceCanvas, 0, 0, width, height);\n\t\t\tcontext.globalCompositeOperation = 'destination-in';\n\t\t\tcontext.beginPath();\n\t\t\tcontext.rect(0 , 0 , width , height );\n\t\t\tcontext.fill();\n\t\t\t\n\t\t\treturn canvas;\n\t\t}\n\t\t//销毁原来的对象\n\t\tVue.prototype.destoried = function () {\n\t\t\tlet self = this;\n\t\t\t//移除事件\n\t\t\tthis.removeEvent( this.clickBtn , 'click' , null );\n\t\t\tthis.removeEvent( this.cancelBtn , 'click' , null );\n\t\t\tthis.removeEvent( this.fileObj , 'click' , null );\n\t\t\t//移除裁剪框\n\t\t\tthis.reagion.parentNode.removeChild(this.reagion);\n\t\t\t\n\t\t\t//销毁裁剪对象\n\t\t\tthis.cropper.destroy();\n\t\t\tthis.cropper = null;\n\t\t}\n\t\t//图片上传\n\t\tVue.prototype.postImg = function( imageData ) {\n\t\t\t// debugger;\n\n\t\t\t//这边写图片的上传\n\t\t\tconsole.log('上传数据');\n\t\t\tconst url = this.uploadServer;\n\t\t\tlet self = this;\n\t\t\t\n\t\t\tconst arr = imageData.split(';base64,');\n\t\t\tconsole.log(arr.length);\n\t\t\tlet fileType = arr[0];\n\t\t\tfileType = fileType.split('data:')[1];\n\t\n\t\t\tparamsData.base64Code = imageData;\n\t\t\tparamsData.filename = this.picValue.name;\n\t\t\tparamsData.type = fileType;\n\n\t\t\tconst headers = this.headers || {};\n\t\t\t\n\t\t\txhr('POST', url, headers, paramsData, function (res) {\n\t\t\t\tconsole.log('上传成功');\n\t\t\t\tconsole.log(res);\n\t\t\t\tconst loading = document.querySelector('.crop_loading');\n\t\t\t\tloading ? loading.style.display = 'none' : null;\n\t\t\t\tconst success = document.querySelector('.crop_success');\n\t\t\t\tsuccess ? success.style.display = 'block' : null;\n\t\t\t\tif (res && res.msgStatus === 0) {\n\t\t\t\t\tself.uploadSuccess && self.uploadSuccess(res);\n\t\t\t\t} else {\n\t\t\t\t\tself.uploadError && self.uploadError(res);\n\t\t\t\t}\n\t\t\t\t//裁剪完后摧毁对象\n\t\t\t\tself.destoried();\n\t\t\t}, function (err) {\n\t\t\t\tconsole.log('上传失败');\n\t\t\t\tconsole.log(err)\n\t\t\t\tself.uploadError && self.uploadError({ msgText: '上传失败' });\n\t\t\t\t// window.uploadError();\n\t\t\t\tconst loading = document.querySelector('.crop_loading');\n\t\t\t\tloading ? loading.style.display = 'none' : null;\n\t\t\t\tconst success = document.querySelector('.crop_success');\n\t\t\t\tsuccess ? success.style.display = 'block' : null;\n\t\t\t\t//裁剪完后摧毁对象\n\t\t\t\tself.destoried();\n\t\t\t}, true, true);\n\t\t}\n\t\t\n\t\t//图片旋转\n\t\tVue.prototype.rotateImg = function( img ,  direction , canvas ) {\n\t\t\t//最小与最大旋转方向，图片旋转4次后回到原方向\n\t\t\tconst min_step = 0;\n\t\t\tconst max_step = 3;\n\t\t\tif (img == null )return;\n\t\t\t//img的高度和宽度不能在img元素隐藏后获取，否则会出错\n\t\t\tlet height = img.height;\n\t\t\tlet width = img.width;\n\t\t\tlet step = 2;\n\t\t\tif (step == null) {\n\t\t\t\tstep = min_step;\n\t\t\t}\n\t\t\tif ( direction == 'right') {\n\t\t\t\tstep++;\n\t\t\t\t//旋转到原位置，即超过最大值\n\t\t\t\tstep > max_step && (step = min_step);\n\t\t\t} else {\n\t\t\t\tstep--;\n\t\t\t\tstep < min_step && (step = max_step);\n\t\t\t}\n\t\t\t//旋转角度以弧度值为参数\n\t\t\tlet degree = step * 90 * Math.PI / 180;\n\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\tswitch (step) {\n\t\t\t\tcase 0:\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tctx.drawImage(img, 0, 0);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 1:\n\t\t\t\t\tcanvas.width = height;\n\t\t\t\t\tcanvas.height = width;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, 0, -height);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 2:\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, -width, -height);\n\t\t\t\t\tbreak;\n\t\t\t\tcase 3:\n\t\t\t\t\tcanvas.width = height;\n\t\t\t\t\tcanvas.height = width;\n\t\t\t\t\tctx.rotate(degree);\n\t\t\t\t\tctx.drawImage(img, -width, 0);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t\t\n\t\t//图片压缩 参数 img element Orientation 旋转参数  返回 压缩后的数据\n\t\tVue.prototype.compress = function ( img , Orientation ) {\n\t\t\tlet canvas = document.createElement(\"canvas\"); // 创建 canvas\n\t\t\tlet ctx = canvas.getContext('2d');\n\t\t\t//瓦片canvas\n\t\t\tlet tCanvas = document.createElement(\"canvas\");\n\t\t\tlet tctx = tCanvas.getContext(\"2d\");\n\t\t\tlet initSize = img.src.length;\n\t\t\tlet width = img.width;\n\t\t\tlet height = img.height;\n\n\t\t\t// alert('width' + width);\n\t\t\t// alert('height' + height);\n\t\t\t// alert(initSize);\n\t\t\t\n\t\t\t//如果图片大于两千四百万像素，计算压缩比并将大小压至2400万以下\n\t\t\tlet ratio;\n\t\t\tif ((ratio = width * height / 9400000 ) > 1) { // 4000000\n\t\t\t\tconsole.log(\"大于940万像素\")\n\t\t\t\t// debugger;\n\t\t\t\tratio = Math.sqrt(ratio);\n\t\t\t\twidth /= ratio;\n\t\t\t\theight /= ratio;\n\t\t\t} else {\n\t\t\t\tratio = 1;\n\t\t\t}\n\t\t\tcanvas.width = width;\n\t\t\tcanvas.height = height;\n\t\t\t//        铺底色\n\t\t\tctx.fillStyle = \"#fff\";\n\t\t\tctx.fillRect(0, 0, canvas.width, canvas.height);\n\t\t\t//如果图片像素大于100万则使用瓦片绘制\n\t\t\tlet count;\n\t\t\tif ((count = width * height / 1000000) > 1) {\n\t\t\t\tcount = ~~(Math.sqrt(count) + 1); //计算要分成多少块瓦片\n\t\t\t\t//            计算每块瓦片的宽和高\n\t\t\t\tlet nw = ~~(width / count);\n\t\t\t\tlet nh = ~~(height / count);\n\t\t\t\ttCanvas.width = nw;\n\t\t\t\ttCanvas.height = nh;\n\t\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\t\tfor (let j = 0; j < count; j++) {\n\t\t\t\t\t\ttctx.drawImage(img, i * nw * ratio, j * nh * ratio, nw * ratio, nh * ratio, 0, 0, nw, nh);\n\t\t\t\t\t\tctx.drawImage(tCanvas, i * nw, j * nh, nw, nh);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tctx.drawImage(img, 0, 0, width, height);\n\t\t\t}\n\t\t\t//修复ios上传图片的时候 被旋转的问题\n\t\t\t// if( Orientation != \"\" && Orientation != 1){\n\t\t\t// \tswitch(Orientation){\n\t\t\t// \t\tcase 6://需要顺时针（向左）90度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'left',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\tcase 8://需要逆时针（向右）90度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t\tcase 3://需要180度旋转\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);//转两次\n\t\t\t// \t\t\tthis.rotateImg(img,'right',canvas);\n\t\t\t// \t\t\tbreak;\n\t\t\t// \t}\n\t\t\t// }\n\n\t\t\t//进行最小压缩\n\t\t\tlet ndata = canvas.toDataURL( 'image/jpeg' , 0.5); // 压缩区间 0 ~ 1\n\t\t\tconsole.log('压缩前：' + initSize);\n\t\t\tconsole.log('压缩后：' + ndata.length);\n\t\t\tconsole.log('压缩率：' + ~~(100 * (initSize - ndata.length) / initSize) + \"%\");\n\t\t\ttCanvas.width = tCanvas.height = canvas.width = canvas.height = 0;\n\t\t\t\n\t\t\treturn ndata; // base64 数据\n\t\t}\n\t\t\n\t\t//添加事件\n\t\tVue.prototype.addEvent = function ( obj , type , fn ) {\n\t\t\tif( obj.addEventListener ){\n\t\t\t\tobj.addEventListener( type , fn , false );\n\t\t\t}else{\n\t\t\t\tobj.attachEvent( 'on' + type , fn );\n\t\t\t}\n\t\t}\n\t\t//移除事件\n\t\tVue.prototype.removeEvent = function ( obj , type , fn ) {\n\t\t\tif( obj.removeEventListener ){\n\t\t\t\tobj.removeEventListener( type , fn , false );\n\t\t\t}else{\n\t\t\t\tobj.detachEvent( 'on' + type , fn );\n\t\t\t}\n\t\t}\n\t}\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/vendors/clipper/clipper.js","/*!\n * Cropper.js v1.2.2\n * https://github.com/fengyuanchen/cropperjs\n *\n * Copyright (c) 2015-2018 Chen Fengyuan\n * Released under the MIT license\n *\n * Date: 2018-01-03T13:27:18.062Z\n */\n\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global.Cropper = factory());\n}(this, (function () { 'use strict';\n\nvar WINDOW = typeof window !== 'undefined' ? window : {};\nvar NAMESPACE = 'cropper';\n\n// Actions\nvar ACTION_ALL = 'all';\nvar ACTION_CROP = 'crop';\nvar ACTION_MOVE = 'move';\nvar ACTION_ZOOM = 'zoom';\nvar ACTION_EAST = 'e';\nvar ACTION_WEST = 'w';\nvar ACTION_SOUTH = 's';\nvar ACTION_NORTH = 'n';\nvar ACTION_NORTH_EAST = 'ne';\nvar ACTION_NORTH_WEST = 'nw';\nvar ACTION_SOUTH_EAST = 'se';\nvar ACTION_SOUTH_WEST = 'sw';\n\n// Classes\nvar CLASS_CROP = NAMESPACE + '-crop';\nvar CLASS_DISABLED = NAMESPACE + '-disabled';\nvar CLASS_HIDDEN = NAMESPACE + '-hidden';\nvar CLASS_HIDE = NAMESPACE + '-hide';\nvar CLASS_INVISIBLE = NAMESPACE + '-invisible';\nvar CLASS_MODAL = NAMESPACE + '-modal';\nvar CLASS_MOVE = NAMESPACE + '-move';\n\n// Data keys\nvar DATA_ACTION = 'action';\nvar DATA_PREVIEW = 'preview';\n\n// Drag modes\nvar DRAG_MODE_CROP = 'crop';\nvar DRAG_MODE_MOVE = 'move';\nvar DRAG_MODE_NONE = 'none';\n\n// Events\nvar EVENT_CROP = 'crop';\nvar EVENT_CROP_END = 'cropend';\nvar EVENT_CROP_MOVE = 'cropmove';\nvar EVENT_CROP_START = 'cropstart';\nvar EVENT_DBLCLICK = 'dblclick';\nvar EVENT_ERROR = 'error';\nvar EVENT_LOAD = 'load';\nvar EVENT_POINTER_DOWN = WINDOW.PointerEvent ? 'pointerdown' : 'touchstart mousedown';\nvar EVENT_POINTER_MOVE = WINDOW.PointerEvent ? 'pointermove' : 'touchmove mousemove';\nvar EVENT_POINTER_UP = WINDOW.PointerEvent ? 'pointerup pointercancel' : 'touchend touchcancel mouseup';\nvar EVENT_READY = 'ready';\nvar EVENT_RESIZE = 'resize';\nvar EVENT_WHEEL = 'wheel mousewheel DOMMouseScroll';\nvar EVENT_ZOOM = 'zoom';\n\n// RegExps\nvar REGEXP_ACTIONS = /^(e|w|s|n|se|sw|ne|nw|all|crop|move|zoom)$/;\nvar REGEXP_DATA_URL = /^data:/;\nvar REGEXP_DATA_URL_JPEG = /^data:image\\/jpeg;base64,/;\nvar REGEXP_TAG_NAME = /^(img|canvas)$/i;\n\nvar DEFAULTS = {\n  // Define the view mode of the cropper\n  viewMode: 0, // 0, 1, 2, 3\n\n  // Define the dragging mode of the cropper\n  dragMode: DRAG_MODE_CROP, // 'crop', 'move' or 'none'\n\n  // Define the aspect ratio of the crop box\n  aspectRatio: NaN,\n\n  // An object with the previous cropping result data\n  data: null,\n\n  // A selector for adding extra containers to preview\n  preview: '',\n\n  // Re-render the cropper when resize the window\n  responsive: true,\n\n  // Restore the cropped area after resize the window\n  restore: true,\n\n  // Check if the current image is a cross-origin image\n  checkCrossOrigin: true,\n\n  // Check the current image's Exif Orientation information\n  checkOrientation: true,\n\n  // Show the black modal\n  modal: true,\n\n  // Show the dashed lines for guiding\n  guides: true,\n\n  // Show the center indicator for guiding\n  center: true,\n\n  // Show the white modal to highlight the crop box\n  highlight: true,\n\n  // Show the grid background\n  background: true,\n\n  // Enable to crop the image automatically when initialize\n  autoCrop: true,\n\n  // Define the percentage of automatic cropping area when initializes\n  autoCropArea: 0.8,\n\n  // Enable to move the image\n  movable: true,\n\n  // Enable to rotate the image\n  rotatable: true,\n\n  // Enable to scale the image\n  scalable: true,\n\n  // Enable to zoom the image\n  zoomable: true,\n\n  // Enable to zoom the image by dragging touch\n  zoomOnTouch: true,\n\n  // Enable to zoom the image by wheeling mouse\n  zoomOnWheel: true,\n\n  // Define zoom ratio when zoom the image by wheeling mouse\n  wheelZoomRatio: 0.1,\n\n  // Enable to move the crop box\n  cropBoxMovable: true,\n\n  // Enable to resize the crop box\n  cropBoxResizable: true,\n\n  // Toggle drag mode between \"crop\" and \"move\" when click twice on the cropper\n  toggleDragModeOnDblclick: true,\n\n  // Size limitation\n  minCanvasWidth: 0,\n  minCanvasHeight: 0,\n  minCropBoxWidth: 0,\n  minCropBoxHeight: 0,\n  minContainerWidth: 200,\n  minContainerHeight: 100,\n\n  // Shortcuts of events\n  ready: null,\n  cropstart: null,\n  cropmove: null,\n  cropend: null,\n  crop: null,\n  zoom: null\n};\n\nvar TEMPLATE = '<div class=\"cropper-container\">' + '<div class=\"cropper-wrap-box\">' + '<div class=\"cropper-canvas\"></div>' + '</div>' + '<div class=\"cropper-drag-box\"></div>' + '<div class=\"cropper-crop-box\">' + '<span class=\"cropper-view-box\"></span>' + '<span class=\"cropper-dashed dashed-h\"></span>' + '<span class=\"cropper-dashed dashed-v\"></span>' + '<span class=\"cropper-center\"></span>' + '<span class=\"cropper-face\"></span>' + '<span class=\"cropper-line line-e\" data-action=\"e\"></span>' + '<span class=\"cropper-line line-n\" data-action=\"n\"></span>' + '<span class=\"cropper-line line-w\" data-action=\"w\"></span>' + '<span class=\"cropper-line line-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-e\" data-action=\"e\"></span>' + '<span class=\"cropper-point point-n\" data-action=\"n\"></span>' + '<span class=\"cropper-point point-w\" data-action=\"w\"></span>' + '<span class=\"cropper-point point-s\" data-action=\"s\"></span>' + '<span class=\"cropper-point point-ne\" data-action=\"ne\"></span>' + '<span class=\"cropper-point point-nw\" data-action=\"nw\"></span>' + '<span class=\"cropper-point point-sw\" data-action=\"sw\"></span>' + '<span class=\"cropper-point point-se\" data-action=\"se\"></span>' + '</div>' + '</div>';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\n\n\n\n\n\n\n\n\n\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar toConsumableArray = function (arr) {\n  if (Array.isArray(arr)) {\n    for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) arr2[i] = arr[i];\n\n    return arr2;\n  } else {\n    return Array.from(arr);\n  }\n};\n\n/**\n * Check if the given value is not a number.\n */\nvar isNaN = Number.isNaN || WINDOW.isNaN;\n\n/**\n * Check if the given value is a number.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a number, else `false`.\n */\nfunction isNumber(value) {\n  return typeof value === 'number' && !isNaN(value);\n}\n\n/**\n * Check if the given value is undefined.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is undefined, else `false`.\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Check if the given value is an object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is an object, else `false`.\n */\nfunction isObject(value) {\n  return (typeof value === 'undefined' ? 'undefined' : _typeof(value)) === 'object' && value !== null;\n}\n\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\n/**\n * Check if the given value is a plain object.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a plain object, else `false`.\n */\n\nfunction isPlainObject(value) {\n  if (!isObject(value)) {\n    return false;\n  }\n\n  try {\n    var _constructor = value.constructor;\n    var prototype = _constructor.prototype;\n\n\n    return _constructor && prototype && hasOwnProperty.call(prototype, 'isPrototypeOf');\n  } catch (e) {\n    return false;\n  }\n}\n\n/**\n * Check if the given value is a function.\n * @param {*} value - The value to check.\n * @returns {boolean} Returns `true` if the given value is a function, else `false`.\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Iterate the given data.\n * @param {*} data - The data to iterate.\n * @param {Function} callback - The process function for each element.\n * @returns {*} The original data.\n */\nfunction each(data, callback) {\n  if (data && isFunction(callback)) {\n    if (Array.isArray(data) || isNumber(data.length) /* array-like */) {\n        var length = data.length;\n\n        var i = void 0;\n\n        for (i = 0; i < length; i += 1) {\n          if (callback.call(data, data[i], i, data) === false) {\n            break;\n          }\n        }\n      } else if (isObject(data)) {\n      Object.keys(data).forEach(function (key) {\n        callback.call(data, data[key], key, data);\n      });\n    }\n  }\n\n  return data;\n}\n\n/**\n * Extend the given object.\n * @param {*} obj - The object to be extended.\n * @param {*} args - The rest objects which will be merged to the first object.\n * @returns {Object} The extended object.\n */\nfunction extend(obj) {\n  for (var _len = arguments.length, args = Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n    args[_key - 1] = arguments[_key];\n  }\n\n  if (isObject(obj) && args.length > 0) {\n    if (Object.assign) {\n      return Object.assign.apply(Object, [obj].concat(args));\n    }\n\n    args.forEach(function (arg) {\n      if (isObject(arg)) {\n        Object.keys(arg).forEach(function (key) {\n          obj[key] = arg[key];\n        });\n      }\n    });\n  }\n\n  return obj;\n}\n\n/**\n * Takes a function and returns a new one that will always have a particular context.\n * @param {Function} fn - The target function.\n * @param {Object} context - The new context for the function.\n * @returns {boolean} The new function.\n */\nfunction proxy(fn, context) {\n  for (var _len2 = arguments.length, args = Array(_len2 > 2 ? _len2 - 2 : 0), _key2 = 2; _key2 < _len2; _key2++) {\n    args[_key2 - 2] = arguments[_key2];\n  }\n\n  return function () {\n    for (var _len3 = arguments.length, args2 = Array(_len3), _key3 = 0; _key3 < _len3; _key3++) {\n      args2[_key3] = arguments[_key3];\n    }\n\n    return fn.apply(context, args.concat(args2));\n  };\n}\n\nvar REGEXP_DECIMALS = /\\.\\d*(?:0|9){12}\\d*$/i;\n\n/**\n * Normalize decimal number.\n * Check out {@link http://0.30000000000000004.com/ }\n * @param {number} value - The value to normalize.\n * @param {number} [times=100000000000] - The times for normalizing.\n * @returns {number} Returns the normalized number.\n */\nfunction normalizeDecimalNumber(value) {\n  var times = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 100000000000;\n\n  return REGEXP_DECIMALS.test(value) ? Math.round(value * times) / times : value;\n}\n\nvar REGEXP_SUFFIX = /^(width|height|left|top|marginLeft|marginTop)$/;\n\n/**\n * Apply styles to the given element.\n * @param {Element} element - The target element.\n * @param {Object} styles - The styles for applying.\n */\nfunction setStyle(element, styles) {\n  var style = element.style;\n\n\n  each(styles, function (value, property) {\n    if (REGEXP_SUFFIX.test(property) && isNumber(value)) {\n      value += 'px';\n    }\n\n    style[property] = value;\n  });\n}\n\n/**\n * Check if the given element has a special class.\n * @param {Element} element - The element to check.\n * @param {string} value - The class to search.\n * @returns {boolean} Returns `true` if the special class was found.\n */\nfunction hasClass(element, value) {\n  return element.classList ? element.classList.contains(value) : element.className.indexOf(value) > -1;\n}\n\n/**\n * Add classes to the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be added.\n */\nfunction addClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      addClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.add(value);\n    return;\n  }\n\n  var className = element.className.trim();\n\n  if (!className) {\n    element.className = value;\n  } else if (className.indexOf(value) < 0) {\n    element.className = className + ' ' + value;\n  }\n}\n\n/**\n * Remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be removed.\n */\nfunction removeClass(element, value) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      removeClass(elem, value);\n    });\n    return;\n  }\n\n  if (element.classList) {\n    element.classList.remove(value);\n    return;\n  }\n\n  if (element.className.indexOf(value) >= 0) {\n    element.className = element.className.replace(value, '');\n  }\n}\n\n/**\n * Add or remove classes from the given element.\n * @param {Element} element - The target element.\n * @param {string} value - The classes to be toggled.\n * @param {boolean} added - Add only.\n */\nfunction toggleClass(element, value, added) {\n  if (!value) {\n    return;\n  }\n\n  if (isNumber(element.length)) {\n    each(element, function (elem) {\n      toggleClass(elem, value, added);\n    });\n    return;\n  }\n\n  // IE10-11 doesn't support the second parameter of `classList.toggle`\n  if (added) {\n    addClass(element, value);\n  } else {\n    removeClass(element, value);\n  }\n}\n\nvar REGEXP_HYPHENATE = /([a-z\\d])([A-Z])/g;\n\n/**\n * Hyphenate the given value.\n * @param {string} value - The value to hyphenate.\n * @returns {string} The hyphenated value.\n */\nfunction hyphenate(value) {\n  return value.replace(REGEXP_HYPHENATE, '$1-$2').toLowerCase();\n}\n\n/**\n * Get data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to get.\n * @returns {string} The data value.\n */\nfunction getData(element, name) {\n  if (isObject(element[name])) {\n    return element[name];\n  } else if (element.dataset) {\n    return element.dataset[name];\n  }\n\n  return element.getAttribute('data-' + hyphenate(name));\n}\n\n/**\n * Set data to the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to set.\n * @param {string} data - The data value.\n */\nfunction setData(element, name, data) {\n  if (isObject(data)) {\n    element[name] = data;\n  } else if (element.dataset) {\n    element.dataset[name] = data;\n  } else {\n    element.setAttribute('data-' + hyphenate(name), data);\n  }\n}\n\n/**\n * Remove data from the given element.\n * @param {Element} element - The target element.\n * @param {string} name - The data key to remove.\n */\nfunction removeData(element, name) {\n  if (isObject(element[name])) {\n    try {\n      delete element[name];\n    } catch (e) {\n      element[name] = null;\n    }\n  } else if (element.dataset) {\n    // #128 Safari not allows to delete dataset property\n    try {\n      delete element.dataset[name];\n    } catch (e) {\n      element.dataset[name] = null;\n    }\n  } else {\n    element.removeAttribute('data-' + hyphenate(name));\n  }\n}\n\nvar REGEXP_SPACES = /\\s+/;\n\n/**\n * Remove event listener from the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction removeListener(element, type, listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!isFunction(listener)) {\n    return;\n  }\n\n  var types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      removeListener(element, t, listener, options);\n    });\n    return;\n  }\n\n  if (element.removeEventListener) {\n    element.removeEventListener(type, listener, options);\n  } else if (element.detachEvent) {\n    element.detachEvent('on' + type, listener);\n  }\n}\n\n/**\n * Add event listener to the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Function} listener - The event listener.\n * @param {Object} options - The event options.\n */\nfunction addListener(element, type, _listener) {\n  var options = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n\n  if (!isFunction(_listener)) {\n    return;\n  }\n\n  var types = type.trim().split(REGEXP_SPACES);\n\n  if (types.length > 1) {\n    each(types, function (t) {\n      addListener(element, t, _listener, options);\n    });\n    return;\n  }\n\n  if (options.once) {\n    var originalListener = _listener;\n\n    _listener = function listener() {\n      for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n        args[_key4] = arguments[_key4];\n      }\n\n      removeListener(element, type, _listener, options);\n      return originalListener.apply(element, args);\n    };\n  }\n\n  if (element.addEventListener) {\n    element.addEventListener(type, _listener, options);\n  } else if (element.attachEvent) {\n    element.attachEvent('on' + type, _listener);\n  }\n}\n\n/**\n * Dispatch event on the target element.\n * @param {Element} element - The event target.\n * @param {string} type - The event type(s).\n * @param {Object} data - The additional event data.\n * @returns {boolean} Indicate if the event is default prevented or not.\n */\nfunction dispatchEvent(element, type, data) {\n  if (element.dispatchEvent) {\n    var event = void 0;\n\n    // Event and CustomEvent on IE9-11 are global objects, not constructors\n    if (isFunction(Event) && isFunction(CustomEvent)) {\n      if (isUndefined(data)) {\n        event = new Event(type, {\n          bubbles: true,\n          cancelable: true\n        });\n      } else {\n        event = new CustomEvent(type, {\n          detail: data,\n          bubbles: true,\n          cancelable: true\n        });\n      }\n    } else if (isUndefined(data)) {\n      event = document.createEvent('Event');\n      event.initEvent(type, true, true);\n    } else {\n      event = document.createEvent('CustomEvent');\n      event.initCustomEvent(type, true, true, data);\n    }\n\n    // IE9+\n    return element.dispatchEvent(event);\n  } else if (element.fireEvent) {\n    // IE6-10 (native events only)\n    return element.fireEvent('on' + type);\n  }\n\n  return true;\n}\n\n/**\n * Get the offset base on the document.\n * @param {Element} element - The target element.\n * @returns {Object} The offset data.\n */\nfunction getOffset(element) {\n  var doc = document.documentElement;\n  var box = element.getBoundingClientRect();\n\n  return {\n    left: box.left + ((window.scrollX || doc && doc.scrollLeft || 0) - (doc && doc.clientLeft || 0)),\n    top: box.top + ((window.scrollY || doc && doc.scrollTop || 0) - (doc && doc.clientTop || 0))\n  };\n}\n\n/**\n * Empty an element.\n * @param {Element} element - The element to empty.\n */\nfunction empty(element) {\n  while (element.firstChild) {\n    element.removeChild(element.firstChild);\n  }\n}\n\nvar location = WINDOW.location;\n\nvar REGEXP_ORIGINS = /^(https?:)\\/\\/([^:/?#]+):?(\\d*)/i;\n\n/**\n * Check if the given URL is a cross origin URL.\n * @param {string} url - The target URL.\n * @returns {boolean} Returns `true` if the given URL is a cross origin URL, else `false`.\n */\nfunction isCrossOriginURL(url) {\n  var parts = url.match(REGEXP_ORIGINS);\n\n  return parts && (parts[1] !== location.protocol || parts[2] !== location.hostname || parts[3] !== location.port);\n}\n\n/**\n * Add timestamp to the given URL.\n * @param {string} url - The target URL.\n * @returns {string} The result URL.\n */\nfunction addTimestamp(url) {\n  var timestamp = 'timestamp=' + new Date().getTime();\n\n  return url + (url.indexOf('?') === -1 ? '?' : '&') + timestamp;\n}\n\n/**\n * Get transforms base on the given object.\n * @param {Object} obj - The target object.\n * @returns {string} A string contains transform values.\n */\nfunction getTransforms(_ref) {\n  var rotate = _ref.rotate,\n      scaleX = _ref.scaleX,\n      scaleY = _ref.scaleY,\n      translateX = _ref.translateX,\n      translateY = _ref.translateY;\n\n  var values = [];\n\n  if (isNumber(translateX) && translateX !== 0) {\n    values.push('translateX(' + translateX + 'px)');\n  }\n\n  if (isNumber(translateY) && translateY !== 0) {\n    values.push('translateY(' + translateY + 'px)');\n  }\n\n  // Rotate should come first before scale to match orientation transform\n  if (isNumber(rotate) && rotate !== 0) {\n    values.push('rotate(' + rotate + 'deg)');\n  }\n\n  if (isNumber(scaleX) && scaleX !== 1) {\n    values.push('scaleX(' + scaleX + ')');\n  }\n\n  if (isNumber(scaleY) && scaleY !== 1) {\n    values.push('scaleY(' + scaleY + ')');\n  }\n\n  var transform = values.length ? values.join(' ') : 'none';\n\n  return {\n    WebkitTransform: transform,\n    msTransform: transform,\n    transform: transform\n  };\n}\n\nvar navigator = WINDOW.navigator;\n\nvar IS_SAFARI_OR_UIWEBVIEW = navigator && /(Macintosh|iPhone|iPod|iPad).*AppleWebKit/i.test(navigator.userAgent);\n\n/**\n * Get an image's natural sizes.\n * @param {string} image - The target image.\n * @param {Function} callback - The callback function.\n */\nfunction getImageNaturalSizes(image, callback) {\n  // Modern browsers (except Safari)\n  if (image.naturalWidth && !IS_SAFARI_OR_UIWEBVIEW) {\n    callback(image.naturalWidth, image.naturalHeight);\n    return;\n  }\n\n  var newImage = document.createElement('img');\n  var body = document.body || document.documentElement;\n\n  newImage.onload = function () {\n    callback(newImage.width, newImage.height);\n\n    if (!IS_SAFARI_OR_UIWEBVIEW) {\n      body.removeChild(newImage);\n    }\n  };\n\n  newImage.src = image.src;\n\n  // iOS Safari will convert the image automatically\n  // with its orientation once append it into DOM (#279)\n  if (!IS_SAFARI_OR_UIWEBVIEW) {\n    newImage.style.cssText = 'left:0;' + 'max-height:none!important;' + 'max-width:none!important;' + 'min-height:0!important;' + 'min-width:0!important;' + 'opacity:0;' + 'position:absolute;' + 'top:0;' + 'z-index:-1;';\n    body.appendChild(newImage);\n  }\n}\n\n/**\n * Get the max ratio of a group of pointers.\n * @param {string} pointers - The target pointers.\n * @returns {number} The result ratio.\n */\nfunction getMaxZoomRatio(pointers) {\n  var pointers2 = extend({}, pointers);\n  var ratios = [];\n\n  each(pointers, function (pointer, pointerId) {\n    delete pointers2[pointerId];\n\n    each(pointers2, function (pointer2) {\n      var x1 = Math.abs(pointer.startX - pointer2.startX);\n      var y1 = Math.abs(pointer.startY - pointer2.startY);\n      var x2 = Math.abs(pointer.endX - pointer2.endX);\n      var y2 = Math.abs(pointer.endY - pointer2.endY);\n      var z1 = Math.sqrt(x1 * x1 + y1 * y1);\n      var z2 = Math.sqrt(x2 * x2 + y2 * y2);\n      var ratio = (z2 - z1) / z1;\n\n      ratios.push(ratio);\n    });\n  });\n\n  ratios.sort(function (a, b) {\n    return Math.abs(a) < Math.abs(b);\n  });\n\n  return ratios[0];\n}\n\n/**\n * Get a pointer from an event object.\n * @param {Object} event - The target event object.\n * @param {boolean} endOnly - Indicates if only returns the end point coordinate or not.\n * @returns {Object} The result pointer contains start and/or end point coordinates.\n */\nfunction getPointer(_ref2, endOnly) {\n  var pageX = _ref2.pageX,\n      pageY = _ref2.pageY;\n\n  var end = {\n    endX: pageX,\n    endY: pageY\n  };\n\n  if (endOnly) {\n    return end;\n  }\n\n  return extend({\n    startX: pageX,\n    startY: pageY\n  }, end);\n}\n\n/**\n * Get the center point coordinate of a group of pointers.\n * @param {Object} pointers - The target pointers.\n * @returns {Object} The center point coordinate.\n */\nfunction getPointersCenter(pointers) {\n  var pageX = 0;\n  var pageY = 0;\n  var count = 0;\n\n  each(pointers, function (_ref3) {\n    var startX = _ref3.startX,\n        startY = _ref3.startY;\n\n    pageX += startX;\n    pageY += startY;\n    count += 1;\n  });\n\n  pageX /= count;\n  pageY /= count;\n\n  return {\n    pageX: pageX,\n    pageY: pageY\n  };\n}\n\n/**\n * Check if the given value is a finite number.\n */\nvar isFinite = Number.isFinite || WINDOW.isFinite;\n\n/**\n * Get the max sizes in a rectangle under the given aspect ratio.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getContainSizes(_ref4) {\n  var aspectRatio = _ref4.aspectRatio,\n      height = _ref4.height,\n      width = _ref4.width;\n\n  var isValidNumber = function isValidNumber(value) {\n    return isFinite(value) && value > 0;\n  };\n\n  if (isValidNumber(width) && isValidNumber(height)) {\n    if (height * aspectRatio > width) {\n      height = width / aspectRatio;\n    } else {\n      width = height * aspectRatio;\n    }\n  } else if (isValidNumber(width)) {\n    height = width / aspectRatio;\n  } else if (isValidNumber(height)) {\n    width = height * aspectRatio;\n  }\n\n  return {\n    width: width,\n    height: height\n  };\n}\n\n/**\n * Get the new sizes of a rectangle after rotated.\n * @param {Object} data - The original sizes.\n * @returns {Object} The result sizes.\n */\nfunction getRotatedSizes(_ref5) {\n  var width = _ref5.width,\n      height = _ref5.height,\n      degree = _ref5.degree;\n\n  degree = Math.abs(degree) % 180;\n\n  if (degree === 90) {\n    return {\n      width: height,\n      height: width\n    };\n  }\n\n  var arc = degree % 90 * Math.PI / 180;\n  var sinArc = Math.sin(arc);\n  var cosArc = Math.cos(arc);\n  var newWidth = width * cosArc + height * sinArc;\n  var newHeight = width * sinArc + height * cosArc;\n\n  return degree > 90 ? {\n    width: newHeight,\n    height: newWidth\n  } : {\n    width: newWidth,\n    height: newHeight\n  };\n}\n\n/**\n * Get a canvas which drew the given image.\n * @param {HTMLImageElement} image - The image for drawing.\n * @param {Object} imageData - The image data.\n * @param {Object} canvasData - The canvas data.\n * @param {Object} options - The options.\n * @returns {HTMLCanvasElement} The result canvas.\n */\nfunction getSourceCanvas(image, _ref6, _ref7, _ref8) {\n  var imageNaturalWidth = _ref6.naturalWidth,\n      imageNaturalHeight = _ref6.naturalHeight,\n      _ref6$rotate = _ref6.rotate,\n      rotate = _ref6$rotate === undefined ? 0 : _ref6$rotate,\n      _ref6$scaleX = _ref6.scaleX,\n      scaleX = _ref6$scaleX === undefined ? 1 : _ref6$scaleX,\n      _ref6$scaleY = _ref6.scaleY,\n      scaleY = _ref6$scaleY === undefined ? 1 : _ref6$scaleY;\n  var aspectRatio = _ref7.aspectRatio,\n      naturalWidth = _ref7.naturalWidth,\n      naturalHeight = _ref7.naturalHeight;\n  var _ref8$fillColor = _ref8.fillColor,\n      fillColor = _ref8$fillColor === undefined ? 'transparent' : _ref8$fillColor,\n      _ref8$imageSmoothingE = _ref8.imageSmoothingEnabled,\n      imageSmoothingEnabled = _ref8$imageSmoothingE === undefined ? true : _ref8$imageSmoothingE,\n      _ref8$imageSmoothingQ = _ref8.imageSmoothingQuality,\n      imageSmoothingQuality = _ref8$imageSmoothingQ === undefined ? 'low' : _ref8$imageSmoothingQ,\n      _ref8$maxWidth = _ref8.maxWidth,\n      maxWidth = _ref8$maxWidth === undefined ? Infinity : _ref8$maxWidth,\n      _ref8$maxHeight = _ref8.maxHeight,\n      maxHeight = _ref8$maxHeight === undefined ? Infinity : _ref8$maxHeight,\n      _ref8$minWidth = _ref8.minWidth,\n      minWidth = _ref8$minWidth === undefined ? 0 : _ref8$minWidth,\n      _ref8$minHeight = _ref8.minHeight,\n      minHeight = _ref8$minHeight === undefined ? 0 : _ref8$minHeight;\n\n  var canvas = document.createElement('canvas');\n  var context = canvas.getContext('2d');\n  var maxSizes = getContainSizes({\n    aspectRatio: aspectRatio,\n    width: maxWidth,\n    height: maxHeight\n  });\n  var minSizes = getContainSizes({\n    aspectRatio: aspectRatio,\n    width: minWidth,\n    height: minHeight\n  });\n  var width = Math.min(maxSizes.width, Math.max(minSizes.width, naturalWidth));\n  var height = Math.min(maxSizes.height, Math.max(minSizes.height, naturalHeight));\n  var params = [-imageNaturalWidth / 2, -imageNaturalHeight / 2, imageNaturalWidth, imageNaturalHeight];\n\n  canvas.width = normalizeDecimalNumber(width);\n  canvas.height = normalizeDecimalNumber(height);\n  context.fillStyle = fillColor;\n  context.fillRect(0, 0, width, height);\n  context.save();\n  context.translate(width / 2, height / 2);\n  context.rotate(rotate * Math.PI / 180);\n  context.scale(scaleX, scaleY);\n  context.imageSmoothingEnabled = imageSmoothingEnabled;\n  context.imageSmoothingQuality = imageSmoothingQuality;\n  context.drawImage.apply(context, [image].concat(toConsumableArray(params.map(function (param) {\n    return Math.floor(normalizeDecimalNumber(param));\n  }))));\n  context.restore();\n  return canvas;\n}\n\nvar fromCharCode = String.fromCharCode;\n\n/**\n * Get string from char code in data view.\n * @param {DataView} dataView - The data view for read.\n * @param {number} start - The start index.\n * @param {number} length - The read length.\n * @returns {string} The read result.\n */\n\nfunction getStringFromCharCode(dataView, start, length) {\n  var str = '';\n  var i = void 0;\n\n  length += start;\n\n  for (i = start; i < length; i += 1) {\n    str += fromCharCode(dataView.getUint8(i));\n  }\n\n  return str;\n}\n\nvar REGEXP_DATA_URL_HEAD = /^data:.*,/;\n\n/**\n * Transform Data URL to array buffer.\n * @param {string} dataURL - The Data URL to transform.\n * @returns {ArrayBuffer} The result array buffer.\n */\nfunction dataURLToArrayBuffer(dataURL) {\n  var base64 = dataURL.replace(REGEXP_DATA_URL_HEAD, '');\n  var binary = atob(base64);\n  var arrayBuffer = new ArrayBuffer(binary.length);\n  var uint8 = new Uint8Array(arrayBuffer);\n\n  each(uint8, function (value, i) {\n    uint8[i] = binary.charCodeAt(i);\n  });\n\n  return arrayBuffer;\n}\n\n/**\n * Transform array buffer to Data URL.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to transform.\n * @param {string} mimeType - The mime type of the Data URL.\n * @returns {string} The result Data URL.\n */\nfunction arrayBufferToDataURL(arrayBuffer, mimeType) {\n  var uint8 = new Uint8Array(arrayBuffer);\n  var data = '';\n\n  // TypedArray.prototype.forEach is not supported in some browsers.\n  each(uint8, function (value) {\n    data += fromCharCode(value);\n  });\n\n  return 'data:' + mimeType + ';base64,' + btoa(data);\n}\n\n/**\n * Get orientation value from given array buffer.\n * @param {ArrayBuffer} arrayBuffer - The array buffer to read.\n * @returns {number} The read orientation value.\n */\nfunction getOrientation(arrayBuffer) {\n  var dataView = new DataView(arrayBuffer);\n  var orientation = void 0;\n  var littleEndian = void 0;\n  var app1Start = void 0;\n  var ifdStart = void 0;\n\n  // Only handle JPEG image (start by 0xFFD8)\n  if (dataView.getUint8(0) === 0xFF && dataView.getUint8(1) === 0xD8) {\n    var length = dataView.byteLength;\n    var offset = 2;\n\n    while (offset < length) {\n      if (dataView.getUint8(offset) === 0xFF && dataView.getUint8(offset + 1) === 0xE1) {\n        app1Start = offset;\n        break;\n      }\n\n      offset += 1;\n    }\n  }\n\n  if (app1Start) {\n    var exifIDCode = app1Start + 4;\n    var tiffOffset = app1Start + 10;\n\n    if (getStringFromCharCode(dataView, exifIDCode, 4) === 'Exif') {\n      var endianness = dataView.getUint16(tiffOffset);\n\n      littleEndian = endianness === 0x4949;\n\n      if (littleEndian || endianness === 0x4D4D /* bigEndian */) {\n          if (dataView.getUint16(tiffOffset + 2, littleEndian) === 0x002A) {\n            var firstIFDOffset = dataView.getUint32(tiffOffset + 4, littleEndian);\n\n            if (firstIFDOffset >= 0x00000008) {\n              ifdStart = tiffOffset + firstIFDOffset;\n            }\n          }\n        }\n    }\n  }\n\n  if (ifdStart) {\n    var _length = dataView.getUint16(ifdStart, littleEndian);\n    var _offset = void 0;\n    var i = void 0;\n\n    for (i = 0; i < _length; i += 1) {\n      _offset = ifdStart + i * 12 + 2;\n\n      if (dataView.getUint16(_offset, littleEndian) === 0x0112 /* Orientation */) {\n          // 8 is the offset of the current tag's value\n          _offset += 8;\n\n          // Get the original orientation value\n          orientation = dataView.getUint16(_offset, littleEndian);\n\n          // Override the orientation with its default value\n          dataView.setUint16(_offset, 1, littleEndian);\n          break;\n        }\n    }\n  }\n\n  return orientation;\n}\n\n/**\n * Parse Exif Orientation value.\n * @param {number} orientation - The orientation to parse.\n * @returns {Object} The parsed result.\n */\nfunction parseOrientation(orientation) {\n  var rotate = 0;\n  var scaleX = 1;\n  var scaleY = 1;\n\n  switch (orientation) {\n    // Flip horizontal\n    case 2:\n      scaleX = -1;\n      break;\n\n    // Rotate left 180°\n    case 3:\n      rotate = -180;\n      break;\n\n    // Flip vertical\n    case 4:\n      scaleY = -1;\n      break;\n\n    // Flip vertical and rotate right 90°\n    case 5:\n      rotate = 90;\n      scaleY = -1;\n      break;\n\n    // Rotate right 90°\n    case 6:\n      rotate = 90;\n      break;\n\n    // Flip horizontal and rotate right 90°\n    case 7:\n      rotate = 90;\n      scaleX = -1;\n      break;\n\n    // Rotate left 90°\n    case 8:\n      rotate = -90;\n      break;\n\n    default:\n  }\n\n  return {\n    rotate: rotate,\n    scaleX: scaleX,\n    scaleY: scaleY\n  };\n}\n\nvar render = {\n  render: function render() {\n    this.initContainer();\n    this.initCanvas();\n    this.initCropBox();\n    this.renderCanvas();\n\n    if (this.cropped) {\n      this.renderCropBox();\n    }\n  },\n  initContainer: function initContainer() {\n    var element = this.element,\n        options = this.options,\n        container = this.container,\n        cropper = this.cropper;\n\n\n    addClass(cropper, CLASS_HIDDEN);\n    removeClass(element, CLASS_HIDDEN);\n\n    var containerData = {\n      width: Math.max(container.offsetWidth, Number(options.minContainerWidth) || 200),\n      height: Math.max(container.offsetHeight, Number(options.minContainerHeight) || 100)\n    };\n\n    this.containerData = containerData;\n\n    setStyle(cropper, {\n      width: containerData.width,\n      height: containerData.height\n    });\n\n    addClass(element, CLASS_HIDDEN);\n    removeClass(cropper, CLASS_HIDDEN);\n  },\n\n\n  // Canvas (image wrapper)\n  initCanvas: function initCanvas() {\n    var containerData = this.containerData,\n        imageData = this.imageData;\n    var viewMode = this.options.viewMode;\n\n    var rotated = Math.abs(imageData.rotate) % 180 === 90;\n    var naturalWidth = rotated ? imageData.naturalHeight : imageData.naturalWidth;\n    var naturalHeight = rotated ? imageData.naturalWidth : imageData.naturalHeight;\n    var aspectRatio = naturalWidth / naturalHeight;\n    var canvasWidth = containerData.width;\n    var canvasHeight = containerData.height;\n\n    if (containerData.height * aspectRatio > containerData.width) {\n      if (viewMode === 3) {\n        canvasWidth = containerData.height * aspectRatio;\n      } else {\n        canvasHeight = containerData.width / aspectRatio;\n      }\n    } else if (viewMode === 3) {\n      canvasHeight = containerData.width / aspectRatio;\n    } else {\n      canvasWidth = containerData.height * aspectRatio;\n    }\n\n    var canvasData = {\n      aspectRatio: aspectRatio,\n      naturalWidth: naturalWidth,\n      naturalHeight: naturalHeight,\n      width: canvasWidth,\n      height: canvasHeight\n    };\n\n    canvasData.left = (containerData.width - canvasWidth) / 2;\n    canvasData.top = (containerData.height - canvasHeight) / 2;\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    this.canvasData = canvasData;\n    this.limited = viewMode === 1 || viewMode === 2;\n    this.limitCanvas(true, true);\n    this.initialImageData = extend({}, imageData);\n    this.initialCanvasData = extend({}, canvasData);\n  },\n  limitCanvas: function limitCanvas(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var viewMode = options.viewMode;\n    var aspectRatio = canvasData.aspectRatio;\n\n    var cropped = this.cropped && cropBoxData;\n\n    if (sizeLimited) {\n      var minCanvasWidth = Number(options.minCanvasWidth) || 0;\n      var minCanvasHeight = Number(options.minCanvasHeight) || 0;\n\n      if (viewMode > 1) {\n        minCanvasWidth = Math.max(minCanvasWidth, containerData.width);\n        minCanvasHeight = Math.max(minCanvasHeight, containerData.height);\n\n        if (viewMode === 3) {\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      } else if (viewMode > 0) {\n        if (minCanvasWidth) {\n          minCanvasWidth = Math.max(minCanvasWidth, cropped ? cropBoxData.width : 0);\n        } else if (minCanvasHeight) {\n          minCanvasHeight = Math.max(minCanvasHeight, cropped ? cropBoxData.height : 0);\n        } else if (cropped) {\n          minCanvasWidth = cropBoxData.width;\n          minCanvasHeight = cropBoxData.height;\n\n          if (minCanvasHeight * aspectRatio > minCanvasWidth) {\n            minCanvasWidth = minCanvasHeight * aspectRatio;\n          } else {\n            minCanvasHeight = minCanvasWidth / aspectRatio;\n          }\n        }\n      }\n\n      var _getContainSizes = getContainSizes({\n        aspectRatio: aspectRatio,\n        width: minCanvasWidth,\n        height: minCanvasHeight\n      });\n\n      minCanvasWidth = _getContainSizes.width;\n      minCanvasHeight = _getContainSizes.height;\n\n\n      canvasData.minWidth = minCanvasWidth;\n      canvasData.minHeight = minCanvasHeight;\n      canvasData.maxWidth = Infinity;\n      canvasData.maxHeight = Infinity;\n    }\n\n    if (positionLimited) {\n      if (viewMode) {\n        var newCanvasLeft = containerData.width - canvasData.width;\n        var newCanvasTop = containerData.height - canvasData.height;\n\n        canvasData.minLeft = Math.min(0, newCanvasLeft);\n        canvasData.minTop = Math.min(0, newCanvasTop);\n        canvasData.maxLeft = Math.max(0, newCanvasLeft);\n        canvasData.maxTop = Math.max(0, newCanvasTop);\n\n        if (cropped && this.limited) {\n          canvasData.minLeft = Math.min(cropBoxData.left, cropBoxData.left + (cropBoxData.width - canvasData.width));\n          canvasData.minTop = Math.min(cropBoxData.top, cropBoxData.top + (cropBoxData.height - canvasData.height));\n          canvasData.maxLeft = cropBoxData.left;\n          canvasData.maxTop = cropBoxData.top;\n\n          if (viewMode === 2) {\n            if (canvasData.width >= containerData.width) {\n              canvasData.minLeft = Math.min(0, newCanvasLeft);\n              canvasData.maxLeft = Math.max(0, newCanvasLeft);\n            }\n\n            if (canvasData.height >= containerData.height) {\n              canvasData.minTop = Math.min(0, newCanvasTop);\n              canvasData.maxTop = Math.max(0, newCanvasTop);\n            }\n          }\n        }\n      } else {\n        canvasData.minLeft = -canvasData.width;\n        canvasData.minTop = -canvasData.height;\n        canvasData.maxLeft = containerData.width;\n        canvasData.maxTop = containerData.height;\n      }\n    }\n  },\n  renderCanvas: function renderCanvas(changed, transformed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n\n    if (transformed) {\n      var _getRotatedSizes = getRotatedSizes({\n        width: imageData.naturalWidth * Math.abs(imageData.scaleX || 1),\n        height: imageData.naturalHeight * Math.abs(imageData.scaleY || 1),\n        degree: imageData.rotate || 0\n      }),\n          naturalWidth = _getRotatedSizes.width,\n          naturalHeight = _getRotatedSizes.height;\n\n      var width = canvasData.width * (naturalWidth / canvasData.naturalWidth);\n      var height = canvasData.height * (naturalHeight / canvasData.naturalHeight);\n\n      canvasData.left -= (width - canvasData.width) / 2;\n      canvasData.top -= (height - canvasData.height) / 2;\n      canvasData.width = width;\n      canvasData.height = height;\n      canvasData.aspectRatio = naturalWidth / naturalHeight;\n      canvasData.naturalWidth = naturalWidth;\n      canvasData.naturalHeight = naturalHeight;\n      this.limitCanvas(true, false);\n    }\n\n    if (canvasData.width > canvasData.maxWidth || canvasData.width < canvasData.minWidth) {\n      canvasData.left = canvasData.oldLeft;\n    }\n\n    if (canvasData.height > canvasData.maxHeight || canvasData.height < canvasData.minHeight) {\n      canvasData.top = canvasData.oldTop;\n    }\n\n    canvasData.width = Math.min(Math.max(canvasData.width, canvasData.minWidth), canvasData.maxWidth);\n    canvasData.height = Math.min(Math.max(canvasData.height, canvasData.minHeight), canvasData.maxHeight);\n\n    this.limitCanvas(false, true);\n\n    canvasData.left = Math.min(Math.max(canvasData.left, canvasData.minLeft), canvasData.maxLeft);\n    canvasData.top = Math.min(Math.max(canvasData.top, canvasData.minTop), canvasData.maxTop);\n    canvasData.oldLeft = canvasData.left;\n    canvasData.oldTop = canvasData.top;\n\n    setStyle(this.canvas, extend({\n      width: canvasData.width,\n      height: canvasData.height\n    }, getTransforms({\n      translateX: canvasData.left,\n      translateY: canvasData.top\n    })));\n\n    this.renderImage(changed);\n\n    if (this.cropped && this.limited) {\n      this.limitCropBox(true, true);\n    }\n  },\n  renderImage: function renderImage(changed) {\n    var canvasData = this.canvasData,\n        imageData = this.imageData;\n\n    var width = imageData.naturalWidth * (canvasData.width / canvasData.naturalWidth);\n    var height = imageData.naturalHeight * (canvasData.height / canvasData.naturalHeight);\n\n    extend(imageData, {\n      width: width,\n      height: height,\n      left: (canvasData.width - width) / 2,\n      top: (canvasData.height - height) / 2\n    });\n    setStyle(this.image, extend({\n      width: imageData.width,\n      height: imageData.height\n    }, getTransforms(extend({\n      translateX: imageData.left,\n      translateY: imageData.top\n    }, imageData))));\n\n    if (changed) {\n      this.output();\n    }\n  },\n  initCropBox: function initCropBox() {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var aspectRatio = options.aspectRatio;\n\n    var autoCropArea = Number(options.autoCropArea) || 0.8;\n    var cropBoxData = {\n      width: canvasData.width,\n      height: canvasData.height\n    };\n\n    if (aspectRatio) {\n      if (canvasData.height * aspectRatio > canvasData.width) {\n        cropBoxData.height = cropBoxData.width / aspectRatio;\n      } else {\n        cropBoxData.width = cropBoxData.height * aspectRatio;\n      }\n    }\n\n    this.cropBoxData = cropBoxData;\n    this.limitCropBox(true, true);\n\n    // Initialize auto crop area\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    // The width/height of auto crop area must large than \"minWidth/Height\"\n    cropBoxData.width = Math.max(cropBoxData.minWidth, cropBoxData.width * autoCropArea);\n    cropBoxData.height = Math.max(cropBoxData.minHeight, cropBoxData.height * autoCropArea);\n    cropBoxData.left = canvasData.left + (canvasData.width - cropBoxData.width) / 2;\n    cropBoxData.top = canvasData.top + (canvasData.height - cropBoxData.height) / 2;\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    this.initialCropBoxData = extend({}, cropBoxData);\n  },\n  limitCropBox: function limitCropBox(sizeLimited, positionLimited) {\n    var options = this.options,\n        containerData = this.containerData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData,\n        limited = this.limited;\n    var aspectRatio = options.aspectRatio;\n\n\n    if (sizeLimited) {\n      var minCropBoxWidth = Number(options.minCropBoxWidth) || 0;\n      var minCropBoxHeight = Number(options.minCropBoxHeight) || 0;\n      var maxCropBoxWidth = Math.min(containerData.width, limited ? canvasData.width : containerData.width);\n      var maxCropBoxHeight = Math.min(containerData.height, limited ? canvasData.height : containerData.height);\n\n      // The min/maxCropBoxWidth/Height must be less than container's width/height\n      minCropBoxWidth = Math.min(minCropBoxWidth, containerData.width);\n      minCropBoxHeight = Math.min(minCropBoxHeight, containerData.height);\n\n      if (aspectRatio) {\n        if (minCropBoxWidth && minCropBoxHeight) {\n          if (minCropBoxHeight * aspectRatio > minCropBoxWidth) {\n            minCropBoxHeight = minCropBoxWidth / aspectRatio;\n          } else {\n            minCropBoxWidth = minCropBoxHeight * aspectRatio;\n          }\n        } else if (minCropBoxWidth) {\n          minCropBoxHeight = minCropBoxWidth / aspectRatio;\n        } else if (minCropBoxHeight) {\n          minCropBoxWidth = minCropBoxHeight * aspectRatio;\n        }\n\n        if (maxCropBoxHeight * aspectRatio > maxCropBoxWidth) {\n          maxCropBoxHeight = maxCropBoxWidth / aspectRatio;\n        } else {\n          maxCropBoxWidth = maxCropBoxHeight * aspectRatio;\n        }\n      }\n\n      // The minWidth/Height must be less than maxWidth/Height\n      cropBoxData.minWidth = Math.min(minCropBoxWidth, maxCropBoxWidth);\n      cropBoxData.minHeight = Math.min(minCropBoxHeight, maxCropBoxHeight);\n      cropBoxData.maxWidth = maxCropBoxWidth;\n      cropBoxData.maxHeight = maxCropBoxHeight;\n    }\n\n    if (positionLimited) {\n      if (limited) {\n        cropBoxData.minLeft = Math.max(0, canvasData.left);\n        cropBoxData.minTop = Math.max(0, canvasData.top);\n        cropBoxData.maxLeft = Math.min(containerData.width, canvasData.left + canvasData.width) - cropBoxData.width;\n        cropBoxData.maxTop = Math.min(containerData.height, canvasData.top + canvasData.height) - cropBoxData.height;\n      } else {\n        cropBoxData.minLeft = 0;\n        cropBoxData.minTop = 0;\n        cropBoxData.maxLeft = containerData.width - cropBoxData.width;\n        cropBoxData.maxTop = containerData.height - cropBoxData.height;\n      }\n    }\n  },\n  renderCropBox: function renderCropBox() {\n    var options = this.options,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData;\n\n\n    if (cropBoxData.width > cropBoxData.maxWidth || cropBoxData.width < cropBoxData.minWidth) {\n      cropBoxData.left = cropBoxData.oldLeft;\n    }\n\n    if (cropBoxData.height > cropBoxData.maxHeight || cropBoxData.height < cropBoxData.minHeight) {\n      cropBoxData.top = cropBoxData.oldTop;\n    }\n\n    cropBoxData.width = Math.min(Math.max(cropBoxData.width, cropBoxData.minWidth), cropBoxData.maxWidth);\n    cropBoxData.height = Math.min(Math.max(cropBoxData.height, cropBoxData.minHeight), cropBoxData.maxHeight);\n\n    this.limitCropBox(false, true);\n\n    cropBoxData.left = Math.min(Math.max(cropBoxData.left, cropBoxData.minLeft), cropBoxData.maxLeft);\n    cropBoxData.top = Math.min(Math.max(cropBoxData.top, cropBoxData.minTop), cropBoxData.maxTop);\n    cropBoxData.oldLeft = cropBoxData.left;\n    cropBoxData.oldTop = cropBoxData.top;\n\n    if (options.movable && options.cropBoxMovable) {\n      // Turn to move the canvas when the crop box is equal to the container\n      setData(this.face, DATA_ACTION, cropBoxData.width >= containerData.width && cropBoxData.height >= containerData.height ? ACTION_MOVE : ACTION_ALL);\n    }\n\n    setStyle(this.cropBox, extend({\n      width: cropBoxData.width,\n      height: cropBoxData.height\n    }, getTransforms({\n      translateX: cropBoxData.left,\n      translateY: cropBoxData.top\n    })));\n\n    if (this.cropped && this.limited) {\n      this.limitCanvas(true, true);\n    }\n\n    if (!this.disabled) {\n      this.output();\n    }\n  },\n  output: function output() {\n    this.preview();\n\n    if (this.complete) {\n      dispatchEvent(this.element, EVENT_CROP, this.getData());\n    }\n  }\n};\n\nvar preview = {\n  initPreview: function initPreview() {\n    var crossOrigin = this.crossOrigin;\n    var preview = this.options.preview;\n\n    var url = crossOrigin ? this.crossOriginUrl : this.url;\n    var image = document.createElement('img');\n\n    if (crossOrigin) {\n      image.crossOrigin = crossOrigin;\n    }\n\n    image.src = url;\n    this.viewBox.appendChild(image);\n    this.image2 = image;\n\n    if (!preview) {\n      return;\n    }\n\n    var previews = preview.querySelector ? [preview] : document.querySelectorAll(preview);\n\n    this.previews = previews;\n\n    each(previews, function (element) {\n      var img = document.createElement('img');\n\n      // Save the original size for recover\n      setData(element, DATA_PREVIEW, {\n        width: element.offsetWidth,\n        height: element.offsetHeight,\n        html: element.innerHTML\n      });\n\n      if (crossOrigin) {\n        img.crossOrigin = crossOrigin;\n      }\n\n      img.src = url;\n\n      /**\n       * Override img element styles\n       * Add `display:block` to avoid margin top issue\n       * Add `height:auto` to override `height` attribute on IE8\n       * (Occur only when margin-top <= -height)\n       */\n      img.style.cssText = 'display:block;' + 'width:100%;' + 'height:auto;' + 'min-width:0!important;' + 'min-height:0!important;' + 'max-width:none!important;' + 'max-height:none!important;' + 'image-orientation:0deg!important;\"';\n\n      empty(element);\n      element.appendChild(img);\n    });\n  },\n  resetPreview: function resetPreview() {\n    each(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n\n      setStyle(element, {\n        width: data.width,\n        height: data.height\n      });\n\n      element.innerHTML = data.html;\n      removeData(element, DATA_PREVIEW);\n    });\n  },\n  preview: function preview() {\n    var imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n    var cropBoxWidth = cropBoxData.width,\n        cropBoxHeight = cropBoxData.height;\n    var width = imageData.width,\n        height = imageData.height;\n\n    var left = cropBoxData.left - canvasData.left - imageData.left;\n    var top = cropBoxData.top - canvasData.top - imageData.top;\n\n    if (!this.cropped || this.disabled) {\n      return;\n    }\n\n    setStyle(this.image2, extend({\n      width: width,\n      height: height\n    }, getTransforms(extend({\n      translateX: -left,\n      translateY: -top\n    }, imageData))));\n\n    each(this.previews, function (element) {\n      var data = getData(element, DATA_PREVIEW);\n      var originalWidth = data.width;\n      var originalHeight = data.height;\n      var newWidth = originalWidth;\n      var newHeight = originalHeight;\n      var ratio = 1;\n\n      if (cropBoxWidth) {\n        ratio = originalWidth / cropBoxWidth;\n        newHeight = cropBoxHeight * ratio;\n      }\n\n      if (cropBoxHeight && newHeight > originalHeight) {\n        ratio = originalHeight / cropBoxHeight;\n        newWidth = cropBoxWidth * ratio;\n        newHeight = originalHeight;\n      }\n\n      setStyle(element, {\n        width: newWidth,\n        height: newHeight\n      });\n\n      setStyle(element.getElementsByTagName('img')[0], extend({\n        width: width * ratio,\n        height: height * ratio\n      }, getTransforms(extend({\n        translateX: -left * ratio,\n        translateY: -top * ratio\n      }, imageData))));\n    });\n  }\n};\n\nvar events = {\n  bind: function bind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      addListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      addListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      addListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      addListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      addListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    addListener(cropper, EVENT_POINTER_DOWN, this.onCropStart = proxy(this.cropStart, this));\n\n    if (options.zoomable && options.zoomOnWheel) {\n      addListener(cropper, EVENT_WHEEL, this.onWheel = proxy(this.wheel, this));\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      addListener(cropper, EVENT_DBLCLICK, this.onDblclick = proxy(this.dblclick, this));\n    }\n\n    addListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove = proxy(this.cropMove, this));\n    addListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd = proxy(this.cropEnd, this));\n\n    if (options.responsive) {\n      addListener(window, EVENT_RESIZE, this.onResize = proxy(this.resize, this));\n    }\n  },\n  unbind: function unbind() {\n    var element = this.element,\n        options = this.options,\n        cropper = this.cropper;\n\n\n    if (isFunction(options.cropstart)) {\n      removeListener(element, EVENT_CROP_START, options.cropstart);\n    }\n\n    if (isFunction(options.cropmove)) {\n      removeListener(element, EVENT_CROP_MOVE, options.cropmove);\n    }\n\n    if (isFunction(options.cropend)) {\n      removeListener(element, EVENT_CROP_END, options.cropend);\n    }\n\n    if (isFunction(options.crop)) {\n      removeListener(element, EVENT_CROP, options.crop);\n    }\n\n    if (isFunction(options.zoom)) {\n      removeListener(element, EVENT_ZOOM, options.zoom);\n    }\n\n    removeListener(cropper, EVENT_POINTER_DOWN, this.onCropStart);\n\n    if (options.zoomable && options.zoomOnWheel) {\n      removeListener(cropper, EVENT_WHEEL, this.onWheel);\n    }\n\n    if (options.toggleDragModeOnDblclick) {\n      removeListener(cropper, EVENT_DBLCLICK, this.onDblclick);\n    }\n\n    removeListener(element.ownerDocument, EVENT_POINTER_MOVE, this.onCropMove);\n    removeListener(element.ownerDocument, EVENT_POINTER_UP, this.onCropEnd);\n\n    if (options.responsive) {\n      removeListener(window, EVENT_RESIZE, this.onResize);\n    }\n  }\n};\n\nvar handlers = {\n  resize: function resize() {\n    var options = this.options,\n        container = this.container,\n        containerData = this.containerData;\n\n    var minContainerWidth = Number(options.minContainerWidth) || 200;\n    var minContainerHeight = Number(options.minContainerHeight) || 100;\n\n    if (this.disabled || containerData.width <= minContainerWidth || containerData.height <= minContainerHeight) {\n      return;\n    }\n\n    var ratio = container.offsetWidth / containerData.width;\n\n    // Resize when width changed or height changed\n    if (ratio !== 1 || container.offsetHeight !== containerData.height) {\n      var canvasData = void 0;\n      var cropBoxData = void 0;\n\n      if (options.restore) {\n        canvasData = this.getCanvasData();\n        cropBoxData = this.getCropBoxData();\n      }\n\n      this.render();\n\n      if (options.restore) {\n        this.setCanvasData(each(canvasData, function (n, i) {\n          canvasData[i] = n * ratio;\n        }));\n        this.setCropBoxData(each(cropBoxData, function (n, i) {\n          cropBoxData[i] = n * ratio;\n        }));\n      }\n    }\n  },\n  dblclick: function dblclick() {\n    if (this.disabled || this.options.dragMode === DRAG_MODE_NONE) {\n      return;\n    }\n\n    this.setDragMode(hasClass(this.dragBox, CLASS_CROP) ? DRAG_MODE_MOVE : DRAG_MODE_CROP);\n  },\n  wheel: function wheel(e) {\n    var _this = this;\n\n    var ratio = Number(this.options.wheelZoomRatio) || 0.1;\n    var delta = 1;\n\n    if (this.disabled) {\n      return;\n    }\n\n    e.preventDefault();\n\n    // Limit wheel speed to prevent zoom too fast (#21)\n    if (this.wheeling) {\n      return;\n    }\n\n    this.wheeling = true;\n\n    setTimeout(function () {\n      _this.wheeling = false;\n    }, 50);\n\n    if (e.deltaY) {\n      delta = e.deltaY > 0 ? 1 : -1;\n    } else if (e.wheelDelta) {\n      delta = -e.wheelDelta / 120;\n    } else if (e.detail) {\n      delta = e.detail > 0 ? 1 : -1;\n    }\n\n    this.zoom(-delta * ratio, e);\n  },\n  cropStart: function cropStart(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var options = this.options,\n        pointers = this.pointers;\n\n    var action = void 0;\n\n    if (e.changedTouches) {\n      // Handle touch event\n      each(e.changedTouches, function (touch) {\n        pointers[touch.identifier] = getPointer(touch);\n      });\n    } else {\n      // Handle mouse event and pointer event\n      pointers[e.pointerId || 0] = getPointer(e);\n    }\n\n    if (Object.keys(pointers).length > 1 && options.zoomable && options.zoomOnTouch) {\n      action = ACTION_ZOOM;\n    } else {\n      action = getData(e.target, DATA_ACTION);\n    }\n\n    if (!REGEXP_ACTIONS.test(action)) {\n      return;\n    }\n\n    if (dispatchEvent(this.element, EVENT_CROP_START, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    e.preventDefault();\n\n    this.action = action;\n    this.cropping = false;\n\n    if (action === ACTION_CROP) {\n      this.cropping = true;\n      addClass(this.dragBox, CLASS_MODAL);\n    }\n  },\n  cropMove: function cropMove(e) {\n    var action = this.action;\n\n\n    if (this.disabled || !action) {\n      return;\n    }\n\n    var pointers = this.pointers;\n\n\n    e.preventDefault();\n\n    if (dispatchEvent(this.element, EVENT_CROP_MOVE, {\n      originalEvent: e,\n      action: action\n    }) === false) {\n      return;\n    }\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        extend(pointers[touch.identifier], getPointer(touch, true));\n      });\n    } else {\n      extend(pointers[e.pointerId || 0], getPointer(e, true));\n    }\n\n    this.change(e);\n  },\n  cropEnd: function cropEnd(e) {\n    if (this.disabled) {\n      return;\n    }\n\n    var action = this.action,\n        pointers = this.pointers;\n\n\n    if (e.changedTouches) {\n      each(e.changedTouches, function (touch) {\n        delete pointers[touch.identifier];\n      });\n    } else {\n      delete pointers[e.pointerId || 0];\n    }\n\n    if (!action) {\n      return;\n    }\n\n    e.preventDefault();\n\n    if (!Object.keys(pointers).length) {\n      this.action = '';\n    }\n\n    if (this.cropping) {\n      this.cropping = false;\n      toggleClass(this.dragBox, CLASS_MODAL, this.cropped && this.options.modal);\n    }\n\n    dispatchEvent(this.element, EVENT_CROP_END, {\n      originalEvent: e,\n      action: action\n    });\n  }\n};\n\nvar change = {\n  change: function change(e) {\n    var options = this.options,\n        canvasData = this.canvasData,\n        containerData = this.containerData,\n        cropBoxData = this.cropBoxData,\n        pointers = this.pointers;\n    var action = this.action;\n    var aspectRatio = options.aspectRatio;\n    var left = cropBoxData.left,\n        top = cropBoxData.top,\n        width = cropBoxData.width,\n        height = cropBoxData.height;\n\n    var right = left + width;\n    var bottom = top + height;\n    var minLeft = 0;\n    var minTop = 0;\n    var maxWidth = containerData.width;\n    var maxHeight = containerData.height;\n    var renderable = true;\n    var offset = void 0;\n\n    // Locking aspect ratio in \"free mode\" by holding shift key\n    if (!aspectRatio && e.shiftKey) {\n      aspectRatio = width && height ? width / height : 1;\n    }\n\n    if (this.limited) {\n      minLeft = cropBoxData.minLeft;\n      minTop = cropBoxData.minTop;\n\n      maxWidth = minLeft + Math.min(containerData.width, canvasData.width, canvasData.left + canvasData.width);\n      maxHeight = minTop + Math.min(containerData.height, canvasData.height, canvasData.top + canvasData.height);\n    }\n\n    var pointer = pointers[Object.keys(pointers)[0]];\n    var range = {\n      x: pointer.endX - pointer.startX,\n      y: pointer.endY - pointer.startY\n    };\n    var check = function check(side) {\n      switch (side) {\n        case ACTION_EAST:\n          if (right + range.x > maxWidth) {\n            range.x = maxWidth - right;\n          }\n\n          break;\n\n        case ACTION_WEST:\n          if (left + range.x < minLeft) {\n            range.x = minLeft - left;\n          }\n\n          break;\n\n        case ACTION_NORTH:\n          if (top + range.y < minTop) {\n            range.y = minTop - top;\n          }\n\n          break;\n\n        case ACTION_SOUTH:\n          if (bottom + range.y > maxHeight) {\n            range.y = maxHeight - bottom;\n          }\n\n          break;\n\n        default:\n      }\n    };\n\n    switch (action) {\n      // Move crop box\n      case ACTION_ALL:\n        left += range.x;\n        top += range.y;\n        break;\n\n      // Resize crop box\n      case ACTION_EAST:\n        if (range.x >= 0 && (right >= maxWidth || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_EAST);\n        width += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top -= range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_WEST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH:\n        if (range.y <= 0 && (top <= minTop || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_NORTH);\n        height -= range.y;\n        top += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left += range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_SOUTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_WEST:\n        if (range.x <= 0 && (left <= minLeft || aspectRatio && (top <= minTop || bottom >= maxHeight))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_WEST);\n        width -= range.x;\n        left += range.x;\n\n        if (aspectRatio) {\n          height = width / aspectRatio;\n          top += range.x / aspectRatio / 2;\n        }\n\n        if (width < 0) {\n          action = ACTION_EAST;\n          width = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH:\n        if (range.y >= 0 && (bottom >= maxHeight || aspectRatio && (left <= minLeft || right >= maxWidth))) {\n          renderable = false;\n          break;\n        }\n\n        check(ACTION_SOUTH);\n        height += range.y;\n\n        if (aspectRatio) {\n          width = height * aspectRatio;\n          left -= range.y * aspectRatio / 2;\n        }\n\n        if (height < 0) {\n          action = ACTION_NORTH;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_EAST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || right >= maxWidth)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_NORTH_WEST:\n        if (aspectRatio) {\n          if (range.y <= 0 && (top <= minTop || left <= minLeft)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_NORTH);\n          height -= range.y;\n          top += range.y;\n          width = height * aspectRatio;\n          left += range.y * aspectRatio;\n        } else {\n          check(ACTION_NORTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y <= 0 && top <= minTop) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y <= 0) {\n            if (top > minTop) {\n              height -= range.y;\n              top += range.y;\n            }\n          } else {\n            height -= range.y;\n            top += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_SOUTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_NORTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_SOUTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_WEST:\n        if (aspectRatio) {\n          if (range.x <= 0 && (left <= minLeft || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_WEST);\n          width -= range.x;\n          left += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_WEST);\n\n          if (range.x <= 0) {\n            if (left > minLeft) {\n              width -= range.x;\n              left += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width -= range.x;\n            left += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_EAST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n        }\n\n        break;\n\n      case ACTION_SOUTH_EAST:\n        if (aspectRatio) {\n          if (range.x >= 0 && (right >= maxWidth || bottom >= maxHeight)) {\n            renderable = false;\n            break;\n          }\n\n          check(ACTION_EAST);\n          width += range.x;\n          height = width / aspectRatio;\n        } else {\n          check(ACTION_SOUTH);\n          check(ACTION_EAST);\n\n          if (range.x >= 0) {\n            if (right < maxWidth) {\n              width += range.x;\n            } else if (range.y >= 0 && bottom >= maxHeight) {\n              renderable = false;\n            }\n          } else {\n            width += range.x;\n          }\n\n          if (range.y >= 0) {\n            if (bottom < maxHeight) {\n              height += range.y;\n            }\n          } else {\n            height += range.y;\n          }\n        }\n\n        if (width < 0 && height < 0) {\n          action = ACTION_NORTH_WEST;\n          height = 0;\n          width = 0;\n        } else if (width < 0) {\n          action = ACTION_SOUTH_WEST;\n          width = 0;\n        } else if (height < 0) {\n          action = ACTION_NORTH_EAST;\n          height = 0;\n        }\n\n        break;\n\n      // Move canvas\n      case ACTION_MOVE:\n        this.move(range.x, range.y);\n        renderable = false;\n        break;\n\n      // Zoom canvas\n      case ACTION_ZOOM:\n        this.zoom(getMaxZoomRatio(pointers), e);\n        renderable = false;\n        break;\n\n      // Create crop box\n      case ACTION_CROP:\n        if (!range.x || !range.y) {\n          renderable = false;\n          break;\n        }\n\n        offset = getOffset(this.cropper);\n        left = pointer.startX - offset.left;\n        top = pointer.startY - offset.top;\n        width = cropBoxData.minWidth;\n        height = cropBoxData.minHeight;\n\n        if (range.x > 0) {\n          action = range.y > 0 ? ACTION_SOUTH_EAST : ACTION_NORTH_EAST;\n        } else if (range.x < 0) {\n          left -= width;\n          action = range.y > 0 ? ACTION_SOUTH_WEST : ACTION_NORTH_WEST;\n        }\n\n        if (range.y < 0) {\n          top -= height;\n        }\n\n        // Show the crop box if is hidden\n        if (!this.cropped) {\n          removeClass(this.cropBox, CLASS_HIDDEN);\n          this.cropped = true;\n\n          if (this.limited) {\n            this.limitCropBox(true, true);\n          }\n        }\n\n        break;\n\n      default:\n    }\n\n    if (renderable) {\n      cropBoxData.width = width;\n      cropBoxData.height = height;\n      cropBoxData.left = left;\n      cropBoxData.top = top;\n      this.action = action;\n      this.renderCropBox();\n    }\n\n    // Override\n    each(pointers, function (p) {\n      p.startX = p.endX;\n      p.startY = p.endY;\n    });\n  }\n};\n\nvar methods = {\n  // Show the crop box manually\n  crop: function crop() {\n    if (this.ready && !this.disabled) {\n      if (!this.cropped) {\n        this.cropped = true;\n        this.limitCropBox(true, true);\n\n        if (this.options.modal) {\n          addClass(this.dragBox, CLASS_MODAL);\n        }\n\n        removeClass(this.cropBox, CLASS_HIDDEN);\n      }\n\n      this.setCropBoxData(this.initialCropBoxData);\n    }\n\n    return this;\n  },\n\n\n  // Reset the image and crop box to their initial states\n  reset: function reset() {\n    if (this.ready && !this.disabled) {\n      this.imageData = extend({}, this.initialImageData);\n      this.canvasData = extend({}, this.initialCanvasData);\n      this.cropBoxData = extend({}, this.initialCropBoxData);\n      this.renderCanvas();\n\n      if (this.cropped) {\n        this.renderCropBox();\n      }\n    }\n\n    return this;\n  },\n\n\n  // Clear the crop box\n  clear: function clear() {\n    if (this.cropped && !this.disabled) {\n      extend(this.cropBoxData, {\n        left: 0,\n        top: 0,\n        width: 0,\n        height: 0\n      });\n\n      this.cropped = false;\n      this.renderCropBox();\n      this.limitCanvas(true, true);\n\n      // Render canvas after crop box rendered\n      this.renderCanvas();\n      removeClass(this.dragBox, CLASS_MODAL);\n      addClass(this.cropBox, CLASS_HIDDEN);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Replace the image's src and rebuild the cropper\n   * @param {string} url - The new URL.\n   * @param {boolean} [onlyColorChanged] - Indicate if the new image only changed color.\n   * @returns {Object} this\n   */\n  replace: function replace(url) {\n    var onlyColorChanged = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n    if (!this.disabled && url) {\n      if (this.isImg) {\n        this.element.src = url;\n      }\n\n      if (onlyColorChanged) {\n        this.url = url;\n        this.image.src = url;\n\n        if (this.ready) {\n          this.image2.src = url;\n\n          each(this.previews, function (element) {\n            element.getElementsByTagName('img')[0].src = url;\n          });\n        }\n      } else {\n        if (this.isImg) {\n          this.replaced = true;\n        }\n\n        // Clear previous data\n        this.options.data = null;\n        this.load(url);\n      }\n    }\n\n    return this;\n  },\n\n\n  // Enable (unfreeze) the cropper\n  enable: function enable() {\n    if (this.ready) {\n      this.disabled = false;\n      removeClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Disable (freeze) the cropper\n  disable: function disable() {\n    if (this.ready) {\n      this.disabled = true;\n      addClass(this.cropper, CLASS_DISABLED);\n    }\n\n    return this;\n  },\n\n\n  // Destroy the cropper and remove the instance from the image\n  destroy: function destroy() {\n    var element = this.element,\n        image = this.image;\n\n\n    if (this.loaded) {\n      if (this.isImg && this.replaced) {\n        element.src = this.originalUrl;\n      }\n\n      this.unbuild();\n      removeClass(element, CLASS_HIDDEN);\n    } else if (this.isImg) {\n      removeListener(element, EVENT_LOAD, this.onStart);\n    } else if (image) {\n      image.parentNode.removeChild(image);\n    }\n\n    removeData(element, NAMESPACE);\n\n    return this;\n  },\n\n\n  /**\n   * Move the canvas with relative offsets\n   * @param {number} offsetX - The relative offset distance on the x-axis.\n   * @param {number} offsetY - The relative offset distance on the y-axis.\n   * @returns {Object} this\n   */\n  move: function move(offsetX, offsetY) {\n    var _canvasData = this.canvasData,\n        left = _canvasData.left,\n        top = _canvasData.top;\n\n\n    return this.moveTo(isUndefined(offsetX) ? offsetX : left + Number(offsetX), isUndefined(offsetY) ? offsetY : top + Number(offsetY));\n  },\n\n\n  /**\n   * Move the canvas to an absolute point\n   * @param {number} x - The x-axis coordinate.\n   * @param {number} [y=x] - The y-axis coordinate.\n   * @returns {Object} this\n   */\n  moveTo: function moveTo(x) {\n    var y = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : x;\n    var canvasData = this.canvasData;\n\n    var changed = false;\n\n    x = Number(x);\n    y = Number(y);\n\n    if (this.ready && !this.disabled && this.options.movable) {\n      if (isNumber(x)) {\n        canvasData.left = x;\n        changed = true;\n      }\n\n      if (isNumber(y)) {\n        canvasData.top = y;\n        changed = true;\n      }\n\n      if (changed) {\n        this.renderCanvas(true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Zoom the canvas with a relative ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoom: function zoom(ratio, _originalEvent) {\n    var canvasData = this.canvasData;\n\n\n    ratio = Number(ratio);\n\n    if (ratio < 0) {\n      ratio = 1 / (1 - ratio);\n    } else {\n      ratio = 1 + ratio;\n    }\n\n    return this.zoomTo(canvasData.width * ratio / canvasData.naturalWidth, null, _originalEvent);\n  },\n\n\n  /**\n   * Zoom the canvas to an absolute ratio\n   * @param {number} ratio - The target ratio.\n   * @param {Object} pivot - The zoom pivot point coordinate.\n   * @param {Event} _originalEvent - The original event if any.\n   * @returns {Object} this\n   */\n  zoomTo: function zoomTo(ratio, pivot, _originalEvent) {\n    var options = this.options,\n        canvasData = this.canvasData;\n    var width = canvasData.width,\n        height = canvasData.height,\n        naturalWidth = canvasData.naturalWidth,\n        naturalHeight = canvasData.naturalHeight;\n\n\n    ratio = Number(ratio);\n\n    if (ratio >= 0 && this.ready && !this.disabled && options.zoomable) {\n      var newWidth = naturalWidth * ratio;\n      var newHeight = naturalHeight * ratio;\n\n      if (dispatchEvent(this.element, EVENT_ZOOM, {\n        originalEvent: _originalEvent,\n        oldRatio: width / naturalWidth,\n        ratio: newWidth / naturalWidth\n      }) === false) {\n        return this;\n      }\n\n      if (_originalEvent) {\n        var pointers = this.pointers;\n\n        var offset = getOffset(this.cropper);\n        var center = pointers && Object.keys(pointers).length ? getPointersCenter(pointers) : {\n          pageX: _originalEvent.pageX,\n          pageY: _originalEvent.pageY\n        };\n\n        // Zoom from the triggering point of the event\n        canvasData.left -= (newWidth - width) * ((center.pageX - offset.left - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((center.pageY - offset.top - canvasData.top) / height);\n      } else if (isPlainObject(pivot) && isNumber(pivot.x) && isNumber(pivot.y)) {\n        canvasData.left -= (newWidth - width) * ((pivot.x - canvasData.left) / width);\n        canvasData.top -= (newHeight - height) * ((pivot.y - canvasData.top) / height);\n      } else {\n        // Zoom from the center of the canvas\n        canvasData.left -= (newWidth - width) / 2;\n        canvasData.top -= (newHeight - height) / 2;\n      }\n\n      canvasData.width = newWidth;\n      canvasData.height = newHeight;\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Rotate the canvas with a relative degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotate: function rotate(degree) {\n    return this.rotateTo((this.imageData.rotate || 0) + Number(degree));\n  },\n\n\n  /**\n   * Rotate the canvas to an absolute degree\n   * @param {number} degree - The rotate degree.\n   * @returns {Object} this\n   */\n  rotateTo: function rotateTo(degree) {\n    degree = Number(degree);\n\n    if (isNumber(degree) && this.ready && !this.disabled && this.options.rotatable) {\n      this.imageData.rotate = degree % 360;\n      this.renderCanvas(true, true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Scale the image on the x-axis.\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @returns {Object} this\n   */\n  scaleX: function scaleX(_scaleX) {\n    var scaleY = this.imageData.scaleY;\n\n\n    return this.scale(_scaleX, isNumber(scaleY) ? scaleY : 1);\n  },\n\n\n  /**\n   * Scale the image on the y-axis.\n   * @param {number} scaleY - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scaleY: function scaleY(_scaleY) {\n    var scaleX = this.imageData.scaleX;\n\n\n    return this.scale(isNumber(scaleX) ? scaleX : 1, _scaleY);\n  },\n\n\n  /**\n   * Scale the image\n   * @param {number} scaleX - The scale ratio on the x-axis.\n   * @param {number} [scaleY=scaleX] - The scale ratio on the y-axis.\n   * @returns {Object} this\n   */\n  scale: function scale(scaleX) {\n    var scaleY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : scaleX;\n    var imageData = this.imageData;\n\n    var transformed = false;\n\n    scaleX = Number(scaleX);\n    scaleY = Number(scaleY);\n\n    if (this.ready && !this.disabled && this.options.scalable) {\n      if (isNumber(scaleX)) {\n        imageData.scaleX = scaleX;\n        transformed = true;\n      }\n\n      if (isNumber(scaleY)) {\n        imageData.scaleY = scaleY;\n        transformed = true;\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the cropped area position and size data (base on the original image)\n   * @param {boolean} [rounded=false] - Indicate if round the data values or not.\n   * @returns {Object} The result cropped data.\n   */\n  getData: function getData$$1() {\n    var rounded = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData,\n        cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        x: cropBoxData.left - canvasData.left,\n        y: cropBoxData.top - canvasData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      each(data, function (n, i) {\n        n /= ratio;\n        data[i] = rounded ? Math.round(n) : n;\n      });\n    } else {\n      data = {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (options.rotatable) {\n      data.rotate = imageData.rotate || 0;\n    }\n\n    if (options.scalable) {\n      data.scaleX = imageData.scaleX || 1;\n      data.scaleY = imageData.scaleY || 1;\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the cropped area position and size with new data\n   * @param {Object} data - The new data.\n   * @returns {Object} this\n   */\n  setData: function setData$$1(data) {\n    var options = this.options,\n        imageData = this.imageData,\n        canvasData = this.canvasData;\n\n    var cropBoxData = {};\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      var transformed = false;\n\n      if (options.rotatable) {\n        if (isNumber(data.rotate) && data.rotate !== imageData.rotate) {\n          imageData.rotate = data.rotate;\n          transformed = true;\n        }\n      }\n\n      if (options.scalable) {\n        if (isNumber(data.scaleX) && data.scaleX !== imageData.scaleX) {\n          imageData.scaleX = data.scaleX;\n          transformed = true;\n        }\n\n        if (isNumber(data.scaleY) && data.scaleY !== imageData.scaleY) {\n          imageData.scaleY = data.scaleY;\n          transformed = true;\n        }\n      }\n\n      if (transformed) {\n        this.renderCanvas(true, true);\n      }\n\n      var ratio = imageData.width / imageData.naturalWidth;\n\n      if (isNumber(data.x)) {\n        cropBoxData.left = data.x * ratio + canvasData.left;\n      }\n\n      if (isNumber(data.y)) {\n        cropBoxData.top = data.y * ratio + canvasData.top;\n      }\n\n      if (isNumber(data.width)) {\n        cropBoxData.width = data.width * ratio;\n      }\n\n      if (isNumber(data.height)) {\n        cropBoxData.height = data.height * ratio;\n      }\n\n      this.setCropBoxData(cropBoxData);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the container size data.\n   * @returns {Object} The result container data.\n   */\n  getContainerData: function getContainerData() {\n    return this.ready ? extend({}, this.containerData) : {};\n  },\n\n\n  /**\n   * Get the image position and size data.\n   * @returns {Object} The result image data.\n   */\n  getImageData: function getImageData() {\n    return this.loaded ? extend({}, this.imageData) : {};\n  },\n\n\n  /**\n   * Get the canvas position and size data.\n   * @returns {Object} The result canvas data.\n   */\n  getCanvasData: function getCanvasData() {\n    var canvasData = this.canvasData;\n\n    var data = {};\n\n    if (this.ready) {\n      each(['left', 'top', 'width', 'height', 'naturalWidth', 'naturalHeight'], function (n) {\n        data[n] = canvasData[n];\n      });\n    }\n\n    return data;\n  },\n\n\n  /**\n   * Set the canvas position and size with new data.\n   * @param {Object} data - The new canvas data.\n   * @returns {Object} this\n   */\n  setCanvasData: function setCanvasData(data) {\n    var canvasData = this.canvasData;\n    var aspectRatio = canvasData.aspectRatio;\n\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        canvasData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        canvasData.top = data.top;\n      }\n\n      if (isNumber(data.width)) {\n        canvasData.width = data.width;\n        canvasData.height = data.width / aspectRatio;\n      } else if (isNumber(data.height)) {\n        canvasData.height = data.height;\n        canvasData.width = data.height * aspectRatio;\n      }\n\n      this.renderCanvas(true);\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get the crop box position and size data.\n   * @returns {Object} The result crop box data.\n   */\n  getCropBoxData: function getCropBoxData() {\n    var cropBoxData = this.cropBoxData;\n\n    var data = void 0;\n\n    if (this.ready && this.cropped) {\n      data = {\n        left: cropBoxData.left,\n        top: cropBoxData.top,\n        width: cropBoxData.width,\n        height: cropBoxData.height\n      };\n    }\n\n    return data || {};\n  },\n\n\n  /**\n   * Set the crop box position and size with new data.\n   * @param {Object} data - The new crop box data.\n   * @returns {Object} this\n   */\n  setCropBoxData: function setCropBoxData(data) {\n    var cropBoxData = this.cropBoxData;\n    var aspectRatio = this.options.aspectRatio;\n\n    var widthChanged = void 0;\n    var heightChanged = void 0;\n\n    if (isFunction(data)) {\n      data = data.call(this.element);\n    }\n\n    if (this.ready && this.cropped && !this.disabled && isPlainObject(data)) {\n      if (isNumber(data.left)) {\n        cropBoxData.left = data.left;\n      }\n\n      if (isNumber(data.top)) {\n        cropBoxData.top = data.top;\n      }\n\n      if (isNumber(data.width) && data.width !== cropBoxData.width) {\n        widthChanged = true;\n        cropBoxData.width = data.width;\n      }\n\n      if (isNumber(data.height) && data.height !== cropBoxData.height) {\n        heightChanged = true;\n        cropBoxData.height = data.height;\n      }\n\n      if (aspectRatio) {\n        if (widthChanged) {\n          cropBoxData.height = cropBoxData.width / aspectRatio;\n        } else if (heightChanged) {\n          cropBoxData.width = cropBoxData.height * aspectRatio;\n        }\n      }\n\n      this.renderCropBox();\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Get a canvas drawn the cropped image.\n   * @param {Object} [options={}] - The config options.\n   * @returns {HTMLCanvasElement} - The result canvas.\n   */\n  getCroppedCanvas: function getCroppedCanvas() {\n    var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    if (!this.ready || !window.HTMLCanvasElement) {\n      return null;\n    }\n\n    var canvasData = this.canvasData;\n\n    var source = getSourceCanvas(this.image, this.imageData, canvasData, options);\n\n    // Returns the source canvas if it is not cropped.\n    if (!this.cropped) {\n      return source;\n    }\n\n    var _getData = this.getData(),\n        x = _getData.x,\n        y = _getData.y,\n        initialWidth = _getData.width,\n        initialHeight = _getData.height;\n\n    var aspectRatio = initialWidth / initialHeight;\n    var maxSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.maxWidth || Infinity,\n      height: options.maxHeight || Infinity\n    });\n    var minSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.minWidth || 0,\n      height: options.minHeight || 0\n    });\n\n    var _getContainSizes = getContainSizes({\n      aspectRatio: aspectRatio,\n      width: options.width || initialWidth,\n      height: options.height || initialHeight\n    }),\n        width = _getContainSizes.width,\n        height = _getContainSizes.height;\n\n    width = Math.min(maxSizes.width, Math.max(minSizes.width, width));\n    height = Math.min(maxSizes.height, Math.max(minSizes.height, height));\n\n    var canvas = document.createElement('canvas');\n    var context = canvas.getContext('2d');\n\n    canvas.width = normalizeDecimalNumber(width);\n    canvas.height = normalizeDecimalNumber(height);\n\n    context.fillStyle = options.fillColor || 'transparent';\n    context.fillRect(0, 0, width, height);\n\n    var _options$imageSmoothi = options.imageSmoothingEnabled,\n        imageSmoothingEnabled = _options$imageSmoothi === undefined ? true : _options$imageSmoothi,\n        imageSmoothingQuality = options.imageSmoothingQuality;\n\n\n    context.imageSmoothingEnabled = imageSmoothingEnabled;\n\n    if (imageSmoothingQuality) {\n      context.imageSmoothingQuality = imageSmoothingQuality;\n    }\n\n    // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D.drawImage\n    var sourceWidth = source.width;\n    var sourceHeight = source.height;\n\n    // Source canvas parameters\n    var srcX = x;\n    var srcY = y;\n    var srcWidth = void 0;\n    var srcHeight = void 0;\n\n    // Destination canvas parameters\n    var dstX = void 0;\n    var dstY = void 0;\n    var dstWidth = void 0;\n    var dstHeight = void 0;\n\n    if (srcX <= -initialWidth || srcX > sourceWidth) {\n      srcX = 0;\n      srcWidth = 0;\n      dstX = 0;\n      dstWidth = 0;\n    } else if (srcX <= 0) {\n      dstX = -srcX;\n      srcX = 0;\n      srcWidth = Math.min(sourceWidth, initialWidth + srcX);\n      dstWidth = srcWidth;\n    } else if (srcX <= sourceWidth) {\n      dstX = 0;\n      srcWidth = Math.min(initialWidth, sourceWidth - srcX);\n      dstWidth = srcWidth;\n    }\n\n    if (srcWidth <= 0 || srcY <= -initialHeight || srcY > sourceHeight) {\n      srcY = 0;\n      srcHeight = 0;\n      dstY = 0;\n      dstHeight = 0;\n    } else if (srcY <= 0) {\n      dstY = -srcY;\n      srcY = 0;\n      srcHeight = Math.min(sourceHeight, initialHeight + srcY);\n      dstHeight = srcHeight;\n    } else if (srcY <= sourceHeight) {\n      dstY = 0;\n      srcHeight = Math.min(initialHeight, sourceHeight - srcY);\n      dstHeight = srcHeight;\n    }\n\n    // All the numerical parameters should be integer for `drawImage`\n    // https://github.com/fengyuanchen/cropper/issues/476\n    var params = [srcX, srcY, srcWidth, srcHeight];\n\n    // Avoid \"IndexSizeError\"\n    if (dstWidth > 0 && dstHeight > 0) {\n      var scale = width / initialWidth;\n\n      params.push(dstX * scale, dstY * scale, dstWidth * scale, dstHeight * scale);\n    }\n\n    context.drawImage.apply(context, [source].concat(toConsumableArray(params.map(function (param) {\n      return Math.floor(normalizeDecimalNumber(param));\n    }))));\n\n    return canvas;\n  },\n\n\n  /**\n   * Change the aspect ratio of the crop box.\n   * @param {number} aspectRatio - The new aspect ratio.\n   * @returns {Object} this\n   */\n  setAspectRatio: function setAspectRatio(aspectRatio) {\n    var options = this.options;\n\n\n    if (!this.disabled && !isUndefined(aspectRatio)) {\n      // 0 -> NaN\n      options.aspectRatio = Math.max(0, aspectRatio) || NaN;\n\n      if (this.ready) {\n        this.initCropBox();\n\n        if (this.cropped) {\n          this.renderCropBox();\n        }\n      }\n    }\n\n    return this;\n  },\n\n\n  /**\n   * Change the drag mode.\n   * @param {string} mode - The new drag mode.\n   * @returns {Object} this\n   */\n  setDragMode: function setDragMode(mode) {\n    var options = this.options,\n        dragBox = this.dragBox,\n        face = this.face;\n\n\n    if (this.loaded && !this.disabled) {\n      var croppable = mode === DRAG_MODE_CROP;\n      var movable = options.movable && mode === DRAG_MODE_MOVE;\n\n      mode = croppable || movable ? mode : DRAG_MODE_NONE;\n\n      setData(dragBox, DATA_ACTION, mode);\n      toggleClass(dragBox, CLASS_CROP, croppable);\n      toggleClass(dragBox, CLASS_MOVE, movable);\n\n      if (!options.cropBoxMovable) {\n        // Sync drag mode to crop box when it is not movable\n        setData(face, DATA_ACTION, mode);\n        toggleClass(face, CLASS_CROP, croppable);\n        toggleClass(face, CLASS_MOVE, movable);\n      }\n    }\n\n    return this;\n  }\n};\n\nvar AnotherCropper = WINDOW.Cropper;\n\nvar Cropper = function () {\n  /**\n   * Create a new Cropper.\n   * @param {Element} element - The target element for cropping.\n   * @param {Object} [options={}] - The configuration options.\n   */\n  function Cropper(element) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Cropper);\n\n    if (!element || !REGEXP_TAG_NAME.test(element.tagName)) {\n      throw new Error('The first argument is required and must be an <img> or <canvas> element.');\n    }\n\n    this.element = element;\n    this.options = extend({}, DEFAULTS, isPlainObject(options) && options);\n    this.complete = false;\n    this.cropped = false;\n    this.disabled = false;\n    this.isImg = false;\n    this.limited = false;\n    this.loaded = false;\n    this.ready = false;\n    this.replaced = false;\n    this.wheeling = false;\n    this.originalUrl = '';\n    this.canvasData = null;\n    this.cropBoxData = null;\n    this.previews = null;\n    this.pointers = {};\n    this.init();\n  }\n\n  createClass(Cropper, [{\n    key: 'init',\n    value: function init() {\n      var element = this.element;\n\n      var tagName = element.tagName.toLowerCase();\n      var url = void 0;\n\n      if (getData(element, NAMESPACE)) {\n        return;\n      }\n\n      setData(element, NAMESPACE, this);\n\n      if (tagName === 'img') {\n        this.isImg = true;\n\n        // e.g.: \"img/picture.jpg\"\n        url = element.getAttribute('src') || '';\n        this.originalUrl = url;\n\n        // Stop when it's a blank image\n        if (!url) {\n          return;\n        }\n\n        // e.g.: \"http://example.com/img/picture.jpg\"\n        url = element.src;\n      } else if (tagName === 'canvas' && window.HTMLCanvasElement) {\n        url = element.toDataURL();\n      }\n\n      this.load(url);\n    }\n  }, {\n    key: 'load',\n    value: function load(url) {\n      var _this = this;\n\n      if (!url) {\n        return;\n      }\n\n      this.url = url;\n      this.imageData = {};\n\n      var element = this.element,\n          options = this.options;\n\n\n      if (!options.checkOrientation || !window.ArrayBuffer) {\n        this.clone();\n        return;\n      }\n\n      // XMLHttpRequest disallows to open a Data URL in some browsers like IE11 and Safari\n      if (REGEXP_DATA_URL.test(url)) {\n        if (REGEXP_DATA_URL_JPEG.test(url)) {\n          this.read(dataURLToArrayBuffer(url));\n        } else {\n          this.clone();\n        }\n\n        return;\n      }\n\n      var xhr = new XMLHttpRequest();\n\n      xhr.onerror = function () {\n        _this.clone();\n      };\n\n      xhr.onload = function () {\n        _this.read(xhr.response);\n      };\n\n      if (options.checkCrossOrigin && isCrossOriginURL(url) && element.crossOrigin) {\n        url = addTimestamp(url);\n      }\n\n      xhr.open('get', url);\n      xhr.responseType = 'arraybuffer';\n      xhr.withCredentials = element.crossOrigin === 'use-credentials';\n      xhr.send();\n    }\n  }, {\n    key: 'read',\n    value: function read(arrayBuffer) {\n      var options = this.options,\n          imageData = this.imageData;\n\n      var orientation = getOrientation(arrayBuffer);\n      var rotate = 0;\n      var scaleX = 1;\n      var scaleY = 1;\n\n      if (orientation > 1) {\n        this.url = arrayBufferToDataURL(arrayBuffer, 'image/jpeg');\n\n        var _parseOrientation = parseOrientation(orientation);\n\n        rotate = _parseOrientation.rotate;\n        scaleX = _parseOrientation.scaleX;\n        scaleY = _parseOrientation.scaleY;\n      }\n\n      if (options.rotatable) {\n        imageData.rotate = rotate;\n      }\n\n      if (options.scalable) {\n        imageData.scaleX = scaleX;\n        imageData.scaleY = scaleY;\n      }\n\n      this.clone();\n    }\n  }, {\n    key: 'clone',\n    value: function clone() {\n      var element = this.element,\n          url = this.url;\n\n      var crossOrigin = void 0;\n      var crossOriginUrl = void 0;\n\n      if (this.options.checkCrossOrigin && isCrossOriginURL(url)) {\n        crossOrigin = element.crossOrigin;\n\n\n        if (crossOrigin) {\n          crossOriginUrl = url;\n        } else {\n          crossOrigin = 'anonymous';\n\n          // Bust cache when there is not a \"crossOrigin\" property\n          crossOriginUrl = addTimestamp(url);\n        }\n      }\n\n      this.crossOrigin = crossOrigin;\n      this.crossOriginUrl = crossOriginUrl;\n\n      var image = document.createElement('img');\n\n      if (crossOrigin) {\n        image.crossOrigin = crossOrigin;\n      }\n\n      image.src = crossOriginUrl || url;\n\n      var start = proxy(this.start, this);\n      var stop = proxy(this.stop, this);\n\n      this.image = image;\n      this.onStart = start;\n      this.onStop = stop;\n\n      if (this.isImg) {\n        if (element.complete) {\n          this.start();\n        } else {\n          addListener(element, EVENT_LOAD, start);\n        }\n      } else {\n        addListener(image, EVENT_LOAD, start);\n        addListener(image, EVENT_ERROR, stop);\n        addClass(image, CLASS_HIDE);\n        element.parentNode.insertBefore(image, element.nextSibling);\n      }\n    }\n  }, {\n    key: 'start',\n    value: function start(event) {\n      var _this2 = this;\n\n      var image = this.isImg ? this.element : this.image;\n\n      if (event) {\n        removeListener(image, EVENT_LOAD, this.onStart);\n        removeListener(image, EVENT_ERROR, this.onStop);\n      }\n\n      getImageNaturalSizes(image, function (naturalWidth, naturalHeight) {\n        extend(_this2.imageData, {\n          naturalWidth: naturalWidth,\n          naturalHeight: naturalHeight,\n          aspectRatio: naturalWidth / naturalHeight\n        });\n        _this2.loaded = true;\n        _this2.build();\n      });\n    }\n  }, {\n    key: 'stop',\n    value: function stop() {\n      var image = this.image;\n\n\n      removeListener(image, EVENT_LOAD, this.onStart);\n      removeListener(image, EVENT_ERROR, this.onStop);\n      image.parentNode.removeChild(image);\n      this.image = null;\n    }\n  }, {\n    key: 'build',\n    value: function build() {\n      var _this3 = this;\n\n      if (!this.loaded) {\n        return;\n      }\n\n      // Unbuild first when replace\n      if (this.ready) {\n        this.unbuild();\n      }\n\n      var element = this.element,\n          options = this.options,\n          image = this.image;\n\n      // Create cropper elements\n\n      var container = element.parentNode;\n      var template = document.createElement('div');\n\n      template.innerHTML = TEMPLATE;\n\n      var cropper = template.querySelector('.' + NAMESPACE + '-container');\n      var canvas = cropper.querySelector('.' + NAMESPACE + '-canvas');\n      var dragBox = cropper.querySelector('.' + NAMESPACE + '-drag-box');\n      var cropBox = cropper.querySelector('.' + NAMESPACE + '-crop-box');\n      var face = cropBox.querySelector('.' + NAMESPACE + '-face');\n\n      this.container = container;\n      this.cropper = cropper;\n      this.canvas = canvas;\n      this.dragBox = dragBox;\n      this.cropBox = cropBox;\n      this.viewBox = cropper.querySelector('.' + NAMESPACE + '-view-box');\n      this.face = face;\n\n      canvas.appendChild(image);\n\n      // Hide the original image\n      addClass(element, CLASS_HIDDEN);\n\n      // Inserts the cropper after to the current image\n      container.insertBefore(cropper, element.nextSibling);\n\n      // Show the image if is hidden\n      if (!this.isImg) {\n        removeClass(image, CLASS_HIDE);\n      }\n\n      this.initPreview();\n      this.bind();\n\n      options.aspectRatio = Math.max(0, options.aspectRatio) || NaN;\n      options.viewMode = Math.max(0, Math.min(3, Math.round(options.viewMode))) || 0;\n\n      this.cropped = options.autoCrop;\n\n      if (options.autoCrop) {\n        if (options.modal) {\n          addClass(dragBox, CLASS_MODAL);\n        }\n      } else {\n        addClass(cropBox, CLASS_HIDDEN);\n      }\n\n      if (!options.guides) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-dashed'), CLASS_HIDDEN);\n      }\n\n      if (!options.center) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-center'), CLASS_HIDDEN);\n      }\n\n      if (options.background) {\n        addClass(cropper, NAMESPACE + '-bg');\n      }\n\n      if (!options.highlight) {\n        addClass(face, CLASS_INVISIBLE);\n      }\n\n      if (options.cropBoxMovable) {\n        addClass(face, CLASS_MOVE);\n        setData(face, DATA_ACTION, ACTION_ALL);\n      }\n\n      if (!options.cropBoxResizable) {\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-line'), CLASS_HIDDEN);\n        addClass(cropBox.getElementsByClassName(NAMESPACE + '-point'), CLASS_HIDDEN);\n      }\n\n      this.setDragMode(options.dragMode);\n      this.render();\n      this.ready = true;\n      this.setData(options.data);\n\n      // Call the \"ready\" option asynchronously to keep \"image.cropper\" is defined\n      this.completing = setTimeout(function () {\n        if (isFunction(options.ready)) {\n          addListener(element, EVENT_READY, options.ready, {\n            once: true\n          });\n        }\n\n        dispatchEvent(element, EVENT_READY);\n        dispatchEvent(element, EVENT_CROP, _this3.getData());\n\n        _this3.complete = true;\n      }, 0);\n    }\n  }, {\n    key: 'unbuild',\n    value: function unbuild() {\n      if (!this.ready) {\n        return;\n      }\n\n      if (!this.complete) {\n        clearTimeout(this.completing);\n      }\n\n      this.ready = false;\n      this.complete = false;\n      this.initialImageData = null;\n\n      // Clear `initialCanvasData` is necessary when replace\n      this.initialCanvasData = null;\n      this.initialCropBoxData = null;\n      this.containerData = null;\n      this.canvasData = null;\n\n      // Clear `cropBoxData` is necessary when replace\n      this.cropBoxData = null;\n      this.unbind();\n      this.resetPreview();\n      this.previews = null;\n      this.viewBox = null;\n      this.cropBox = null;\n      this.dragBox = null;\n      this.canvas = null;\n      this.container = null;\n      this.cropper.parentNode.removeChild(this.cropper);\n      this.cropper = null;\n    }\n\n    /**\n     * Get the no conflict cropper class.\n     * @returns {Cropper} The cropper class.\n     */\n\n  }], [{\n    key: 'noConflict',\n    value: function noConflict() {\n      window.Cropper = AnotherCropper;\n      return Cropper;\n    }\n\n    /**\n     * Change the default options.\n     * @param {Object} options - The new default options.\n     */\n\n  }, {\n    key: 'setDefaults',\n    value: function setDefaults(options) {\n      extend(DEFAULTS, isPlainObject(options) && options);\n    }\n  }]);\n  return Cropper;\n}();\n\nextend(Cropper.prototype, render, preview, events, handlers, change, methods);\n\nreturn Cropper;\n\n})));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/cropperjs/dist/cropper.js\n// module id = 775\n// module chunks = 2","module.exports = __webpack_public_path__ + \"/asset/imgs/loading50c5e3e79b276c92df6cc52caeb464f0.gif\";\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/assets/images/loading.gif\n// module id = 776\n// module chunks = 2","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"div\",\n    { staticClass: \"content\", attrs: { id: \"test\" } },\n    [\n      _c(\n        \"mu-list\",\n        { staticClass: \"normal-list\" },\n        [\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"All mail\" } },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"Trash\" } },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            {\n              staticClass: \"normal-list-item\",\n              attrs: { title: \"Spam\", afterText: \"你好啊啊啊\" }\n            },\n            [\n              _c(\"i\", {\n                staticClass: \"iconfont icon-list-more\",\n                attrs: { slot: \"right\" },\n                slot: \"right\"\n              })\n            ]\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"mu-list-item\",\n            { staticClass: \"normal-list-item\", attrs: { title: \"Follow up\" } },\n            [\n              _c(\"span\", { attrs: { slot: \"right\" }, slot: \"right\" }, [\n                _c(\"i\", { staticClass: \"iconfont icon-list-more\" })\n              ])\n            ]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.openModal } }, [_vm._v(\"点我打开模态框\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.enterCommentView } }, [_vm._v(\"好友页面\")]),\n      _vm._v(\" \"),\n      _c(\"input\", {\n        staticClass: \"upload-input\",\n        attrs: { type: \"file\", accept: \"image/*\" },\n        on: {\n          change: function($event) {\n            _vm.changeImg($event)\n          }\n        }\n      }),\n      _vm._v(\" \"),\n      _vm._m(0),\n      _vm._v(\" \"),\n      _c(\n        \"mu-popup\",\n        {\n          attrs: { position: \"bottom\", open: _vm.isShowModal2 },\n          on: {\n            close: function($event) {\n              _vm.closeMode2()\n            }\n          }\n        },\n        [\n          _c(\"div\", { on: { click: _vm.closeMode2 } }, [_vm._v(\"点我关闭\")]),\n          _vm._v(\" \"),\n          _c(\"div\", [_vm._v(\"大傻逼\")])\n        ]\n      ),\n      _vm._v(\" \"),\n      _vm._m(1),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.chooseFile } }, [_vm._v(\"点我选择头像\")]),\n      _vm._v(\" \"),\n      _c(\"div\", { on: { click: _vm.choosePhoto } }, [_vm._v(\"点我选择相片\")]),\n      _vm._v(\" \"),\n      _c(\"my-croppa\", {\n        ref: \"croppa\",\n        attrs: { option: _vm.myCroppaOption },\n        on: { confirm: _vm.myCroppaConfirm }\n      }),\n      _vm._v(\" \"),\n      _vm.a\n        ? _c(\n            \"mu-popup\",\n            {\n              attrs: {\n                position: \"bottom\",\n                popupClass: \"modal\",\n                open: _vm.isShowModal\n              },\n              on: {\n                close: function($event) {\n                  _vm.closeModel()\n                }\n              }\n            },\n            [\n              _c(\"smooth-picker\", {\n                ref: \"smoothPicker\",\n                attrs: { data: _vm.pickerData, change: _vm.change }\n              })\n            ],\n            1\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = [\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\"div\", { staticClass: \"img-test\" }, [\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: require(\"./../../assets/images/avatar.png\")\n            }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: require(\"./../../assets/images/weixiaobao.png\")\n            }\n          })\n        ]\n      ),\n      _vm._v(\" \"),\n      _c(\n        \"div\",\n        { staticStyle: { width: \"40px\", height: \"40px\", overflow: \"hidden\" } },\n        [\n          _c(\"img\", {\n            staticClass: \"preview-img\",\n            attrs: {\n              preview: \"1\",\n              src: require(\"./../../assets/images/timg.jpg\")\n            }\n          })\n        ]\n      )\n    ])\n  },\n  function() {\n    var _vm = this\n    var _h = _vm.$createElement\n    var _c = _vm._self._c || _h\n    return _c(\n      \"div\",\n      { staticClass: \"image-collector\", attrs: { id: \"image-collector\" } },\n      [_c(\"div\", { staticClass: \"swiper-wrapper\" })]\n    )\n  }\n]\nrender._withStripped = true\nvar esExports = { render: render, staticRenderFns: staticRenderFns }\nexport default esExports\nif (module.hot) {\n  module.hot.accept()\n  if (module.hot.data) {\n    require(\"vue-hot-reload-api\")      .rerender(\"data-v-a029b292\", esExports)\n  }\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/vue-loader/lib/template-compiler?{\"id\":\"data-v-a029b292\",\"hasScoped\":false,\"buble\":{\"transforms\":{}}}!./node_modules/vue-loader/lib/selector.js?type=template&index=0&bustCache!./src/pages/test/index.vue\n// module id = 778\n// module chunks = 2"],"sourceRoot":""}